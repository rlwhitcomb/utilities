/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2020-2021 Roger L. Whitcomb.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 *      Tests of some of the NumericUtil and MathUtil methods.
 *
 * History:
 *      03-Dec-2020 (rlwhitcomb)
 *          Initial coding finished.
 *	05-Jan-2021 (rlwhitcomb)
 *	    More digits; add test to Calc limits (12,000).
 *	28-Jan-2021 (rlwhitcomb)
 *	    Tests of "convertToWords".
 *	28-Jan-2021 (rlwhitcomb)
 *	    Tests of the read/write binary code, which is tricky.
 *	29-Jan-2021 (rlwhitcomb)
 *	    Tests of BigFraction.
 *	30-Jan-2021 (rlwhitcomb)
 *	    BigFraction(String) tests.
 *	02-Mar-2021 (rlwhitcomb)
 *	    One more BigFraction test. One more PI/E test with fewer digits
 *	    to test the new caching code.
 *	09-Mar-2021 (rlwhitcomb)
 *	    More tests of BigFraction.valueOf since there were significant bugs
 *	    that are supposedly fixed now.
 *	10-Mar-2021 (rlwhitcomb)
 *	    Testing Roman numeral conversions.
 *	22-Mar-2021 (rlwhitcomb)
 *	    A few more Roman numeral tests.
 *	22-Mar-2021 (rlwhitcomb)
 *	    Some lower-case Roman numeral tests.
 *	26-Mar-2021 (rlwhitcomb)
 *	    Move some methods from NumericUtil to MathUtil.
 */
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.MathContext;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;

import info.rlwhitcomb.util.BigFraction;
import info.rlwhitcomb.util.FileUtilities;
import info.rlwhitcomb.util.MathUtil;
import info.rlwhitcomb.util.NumericUtil;

/**
 * Tests of (some of) the {@link NumericUtil} and {@link MathUtil} methods.
 */
public class TestNumericUtil
{
	private static final String PI_DIGITS =
		"3." +
		"14159265358979323846264338327950288419716939937510582097494459230781640628620899" +
		"86280348253421170679821480865132823066470938446095505822317253594081284811174502" +
		"84102701938521105559644622948954930381964428810975665933446128475648233786783165" +
		"27120190914564856692346034861045432664821339360726024914127372458700660631558817" +
		"48815209209628292540917153643678925903600113305305488204665213841469519415116094" +
		"33057270365759591953092186117381932611793105118548074462379962749567351885752724" +
		"89122793818301194912983367336244065664308602139494639522473719070217986094370277" +
		"05392171762931767523846748184676694051320005681271452635608277857713427577896091" +
		"73637178721468440901224953430146549585371050792279689258923542019956112129021960" +
		"86403441815981362977477130996051870721134999999837297804995105973173281609631859" +
		"50244594553469083026425223082533446850352619311881710100031378387528865875332083" +
		"81420617177669147303598253490428755468731159562863882353787593751957781857780532" +
		"17122680661300192787661119590921642019893809525720106548586327886593615338182796" +
		"82303019520353018529689957736225994138912497217752834791315155748572424541506959" +
		"50829533116861727855889075098381754637464939319255060400927701671139009848824012" +
		"85836160356370766010471018194295559619894676783744944825537977472684710404753464" +
		"62080466842590694912933136770289891521047521620569660240580381501935112533824300" +
		"35587640247496473263914199272604269922796782354781636009341721641219924586315030" +
		"28618297455570674983850549458858692699569092721079750930295532116534498720275596" +
		"02364806654991198818347977535663698074265425278625518184175746728909777727938000" +
		"81647060016145249192173217214772350141441973568548161361157352552133475741849468" +
		"43852332390739414333454776241686251898356948556209921922218427255025425688767179" +
		"04946016534668049886272327917860857843838279679766814541009538837863609506800642" +
		"25125205117392984896084128488626945604241965285022210661186306744278622039194945" +
		"04712371378696095636437191728746776465757396241389086583264599581339047802759009" +
		"94657640789512694683983525957098258226205224894077267194782684826014769909026401" +
		"36394437455305068203496252451749399651431429809190659250937221696461515709858387" +
		"41059788595977297549893016175392846813826868386894277415599185592524595395943104" +
		"99725246808459872736446958486538367362226260991246080512438843904512441365497627" +
		"80797715691435997700129616089441694868555848406353422072225828488648158456028506" +
		"01684273945226746767889525213852254995466672782398645659611635488623057745649803" +
		"55936345681743241125150760694794510965960940252288797108931456691368672287489405" +
		"60101503308617928680920874760917824938589009714909675985261365549781893129784821" +
		"68299894872265880485756401427047755513237964145152374623436454285844479526586782" +
		"10511413547357395231134271661021359695362314429524849371871101457654035902799344" +
		"03742007310578539062198387447808478489683321445713868751943506430218453191048481" +
		"00537061468067491927819119793995206141966342875444064374512371819217999839101591" +
		"95618146751426912397489409071864942319615679452080951465502252316038819301420937" +
		"62137855956638937787083039069792077346722182562599661501421503068038447734549202" +
		"60541466592520149744285073251866600213243408819071048633173464965145390579626856" +
		"10055081066587969981635747363840525714591028970641401109712062804390397595156771" +
		"57700420337869936007230558763176359421873125147120532928191826186125867321579198" +
		"41484882916447060957527069572209175671167229109816909152801735067127485832228718" +
		"35209353965725121083579151369882091444210067510334671103141267111369908658516398" +
		"31501970165151168517143765761835155650884909989859982387345528331635507647918535" +
		"89322618548963213293308985706420467525907091548141654985946163718027098199430992" +
		"44889575712828905923233260972997120844335732654893823911932597463667305836041428" +
		"13883032038249037589852437441702913276561809377344403070746921120191302033038019" +
		"76211011004492932151608424448596376698389522868478312355265821314495768572624334" +
		"41893039686426243410773226978028073189154411010446823252716201052652272111660396" +
		"66557309254711055785376346682065310989652691862056476931257058635662018558100729" +
		"36065987648611791045334885034611365768675324944166803962657978771855608455296541" +
		"26654085306143444318586769751456614068007002378776591344017127494704205622305389" +
		"94561314071127000407854733269939081454664645880797270826683063432858785698305235" +
		"80893306575740679545716377525420211495576158140025012622859413021647155097925923" +
		"09907965473761255176567513575178296664547791745011299614890304639947132962107340" +
		"43751895735961458901938971311179042978285647503203198691514028708085990480109412" +
		"14722131794764777262241425485454033215718530614228813758504306332175182979866223" +
		"71721591607716692547487389866549494501146540628433663937900397692656721463853067" +
		"36096571209180763832716641627488880078692560290228472104031721186082041900042296" +
		"61711963779213375751149595015660496318629472654736425230817703675159067350235072" +
		"83540567040386743513622224771589150495309844489333096340878076932599397805419341" +
		"44737744184263129860809988868741326047215695162396586457302163159819319516735381" +
		"29741677294786724229246543668009806769282382806899640048243540370141631496589794" +
		"09243237896907069779422362508221688957383798623001593776471651228935786015881617" +
		"55782973523344604281512627203734314653197777416031990665541876397929334419521541" +
		"34189948544473456738316249934191318148092777710386387734317720754565453220777092" +
		"12019051660962804909263601975988281613323166636528619326686336062735676303544776" +
		"28035045077723554710585954870279081435624014517180624643626794561275318134078330" +
		"33625423278394497538243720583531147711992606381334677687969597030983391307710987" +
		"04085913374641442822772634659470474587847787201927715280731767907707157213444730" +
		"60570073349243693113835049316312840425121925651798069411352801314701304781643788" +
		"51852909285452011658393419656213491434159562586586557055269049652098580338507224" +
		"26482939728584783163057777560688876446248246857926039535277348030480290058760758" +
		"25104747091643961362676044925627420420832085661190625454337213153595845068772460" +
		"29016187667952406163425225771954291629919306455377991403734043287526288896399587" +
		"94757291746426357455254079091451357111369410911939325191076020825202618798531887" +
		"70584297259167781314969900901921169717372784768472686084900337702424291651300500" +
		"51683233643503895170298939223345172201381280696501178440874519601212285993716231" +
		"30171144484640903890644954440061986907548516026327505298349187407866808818338510" +
		"22833450850486082503930213321971551843063545500766828294930413776552793975175461" +
		"39539846833936383047461199665385815384205685338621867252334028308711232827892125" +
		"07712629463229563989898935821167456270102183564622013496715188190973038119800497" +
		"34072396103685406643193950979019069963955245300545058068550195673022921913933918" +
		"56803449039820595510022635353619204199474553859381023439554495977837790237421617" +
		"27111723643435439478221818528624085140066604433258885698670543154706965747458550" +
		"33232334210730154594051655379068662733379958511562578432298827372319898757141595" +
		"78111963583300594087306812160287649628674460477464915995054973742562690104903778" +
		"19868359381465741268049256487985561453723478673303904688383436346553794986419270" +
		"56387293174872332083760112302991136793862708943879936201629515413371424892830722" +
		"01269014754668476535761647737946752004907571555278196536213239264061601363581559" +
		"07422020203187277605277219005561484255518792530343513984425322341576233610642506" +
		"39049750086562710953591946589751413103482276930624743536325691607815478181152843" +
		"66795706110861533150445212747392454494542368288606134084148637767009612071512491" +
		"40430272538607648236341433462351897576645216413767969031495019108575984423919862" +
		"91642193994907236234646844117394032659184044378051333894525742399508296591228508" +
		"55582157250310712570126683024029295252201187267675622041542051618416348475651699" +
		"98116141010029960783869092916030288400269104140792886215078424516709087000699282" +
		"12066041837180653556725253256753286129104248776182582976515795984703562226293486" +
		"00341587229805349896502262917487882027342092222453398562647669149055628425039127" +
		"57710284027998066365825488926488025456610172967026640765590429099456815065265305" +
		"37182941270336931378517860904070866711496558343434769338578171138645587367812301" +
		"45876871266034891390956200993936103102916161528813843790990423174733639480457593" +
		"14931405297634757481193567091101377517210080315590248530906692037671922033229094" +
		"33467685142214477379393751703443661991040337511173547191855046449026365512816228" +
		"82446257591633303910722538374218214088350865739177150968288747826569959957449066" +
		"17583441375223970968340800535598491754173818839994469748676265516582765848358845" +
		"31427756879002909517028352971634456212964043523117600665101241200659755851276178" +
		"58382920419748442360800719304576189323492292796501987518721272675079812554709589" +
		"04556357921221033346697499235630254947802490114195212382815309114079073860251522" +
		"74299581807247162591668545133312394804947079119153267343028244186041426363954800" +
		"04480026704962482017928964766975831832713142517029692348896276684403232609275249" +
		"60357996469256504936818360900323809293459588970695365349406034021665443755890045" +
		"63288225054525564056448246515187547119621844396582533754388569094113031509526179" +
		"37800297412076651479394259029896959469955657612186561967337862362561252163208628" +
		"69222103274889218654364802296780705765615144632046927906821207388377814233562823" +
		"60896320806822246801224826117718589638140918390367367222088832151375560037279839" +
		"40041529700287830766709444745601345564172543709069793961225714298946715435784687" +
		"88614445812314593571984922528471605049221242470141214780573455105008019086996033" +
		"02763478708108175450119307141223390866393833952942578690507643100638351983438934" +
		"15961318543475464955697810382930971646514384070070736041123735998434522516105070" +
		"27056235266012764848308407611830130527932054274628654036036745328651057065874882" +
		"25698157936789766974220575059683440869735020141020672358502007245225632651341055" +
		"92401902742162484391403599895353945909440704691209140938700126456001623742880210" +
		"92764579310657922955249887275846101264836999892256959688159205600101655256375678" +
		"56672279661988578279484885583439751874454551296563443480396642055798293680435220" +
		"27709842942325330225763418070394769941597915945300697521482933665556615678736400" +
		"53666564165473217043903521329543529169414599041608753201868379370234888689479151" +
		"07163785290234529244077365949563051007421087142613497459561513849871375704710178" +
		"79573104229690666702144986374645952808243694457897723300487647652413390759204340" +
		"19634039114732023380715095222010682563427471646024335440051521266932493419673977" +
		"04159568375355516673027390074972973635496453328886984406119649616277344951827369" +
		"55882207573551766515898551909866653935494810688732068599075407923424023009259007" +
		"01731960362254756478940647548346647760411463233905651343306844953979070903023460" +
		"46147096169688688501408347040546074295869913829668246818571031887906528703665083" +
		"24319744047718556789348230894310682870272280973624809399627060747264553992539944" +
		"28081137369433887294063079261595995462624629707062594845569034711972996409089418" +
		"05953439325123623550813494900436427852713831591256898929519642728757394691427253" +
		"43669415323610045373048819855170659412173524625895487301676002988659257866285612" +
		"49665523533829428785425340483083307016537228563559152534784459818313411290019992" +
		"05981352205117336585640782648494276441137639386692480311836445369858917544264739" +
		"98822846218449008777697763127957226726555625962825427653183001340709223343657791" +
		"60128093179401718598599933849235495640057099558561134980252499066984233017350358" +
		"04408116855265311709957089942732870925848789443646005041089226691783525870785951" +
		"29834417295351953788553457374260859029081765155780390594640873506123226112009373" +
		"10804854852635722825768203416050484662775045003126200800799804925485346941469775" +
		"16493270950493463938243222718851597405470214828971117779237612257887347718819682" +
		"54629812686858170507402725502633290449762778944236216741191862694396506715157795" +
		"86756482399391760426017633870454990176143641204692182370764887834196896861181558" +
		"15873606293860381017121585527266830082383404656475880405138080163363887421637140" +
		"64354955618689641122821407533026551004241048967835285882902436709048871181909094" +
		"94533144218287661810310073547705498159680772009474696134360928614849417850171807" +
		"79306810854690009445899527942439813921350558642219648349151263901280383200109773" +
		"86806628779239718014613432445726400973742570073592100315415089367930081699805365" +
		"20276007277496745840028362405346037263416554259027601834840306811381855105979705" +
		"66400750942608788573579603732451414678670368809880609716425849759513806930944940" +
		"15154222219432913021739125383559150310033303251117491569691745027149433151558854" +
		"03922164097229101129035521815762823283182342548326111912800928252561902052630163" +
		"91147724733148573910777587442538761174657867116941477642144111126358355387136101" +
		"10232679877564102468240322648346417663698066378576813492045302240819727856471983" +
		"96308781543221166912246415911776732253264335686146186545222681268872684459684424" +
		"16107854016768142080885028005414361314623082102594173756238994207571362751674573" +
		"18918945628352570441335437585753426986994725470316566139919996826282472706413362" +
		"22178923903176085428943733935618891651250424404008952719837873864805847268954624" +
		"38823437517885201439560057104811949884239060613695734231559079670346149143447886" +
		"36041031823507365027785908975782727313050488939890099239135033732508559826558670" +
		"89242612429473670193907727130706869170926462548423240748550366080136046689511840" +
		"09366860954632500214585293095000090715105823626729326453738210493872499669933942" +
		"46855164832611341461106802674466373343753407642940266829738652209357016263846485" +
		"28514903629320199199688285171839536691345222444708045923966028171565515656661113" +
		"59823112250628905854914509715755390024393153519090210711945730024388017661503527" +
		"08626025378817975194780610137150044899172100222013350131060163915415895780371177" +
		"92775225978742891917915522417189585361680594741234193398420218745649256443462392" +
		"53195313510331147639491199507285843065836193536932969928983791494193940608572486" +
		"39688369032655643642166442576079147108699843157337496488352927693282207629472823" +
		"81537409961545598798259891093717126218283025848112389011968221429457667580718653" +
		"80650648702613389282299497257453033283896381843944770779402284359883410035838542" +
		"38973542439564755568409522484455413923941000162076936368467764130178196593799715" +
		"57468541946334893748439129742391433659360410035234377706588867781139498616478747" +
		"14079326385873862473288964564359877466763847946650407411182565837887845485814896" +
		"29612739984134427260860618724554523606431537101127468097787044640947582803487697" +
		"58948328241239292960582948619196670918958089833201210318430340128495116203534280" +
		"14412761728583024355983003204202451207287253558119584014918096925339507577840006" +
		"74655260314461670508276827722235341911026341631571474061238504258459884199076112" +
		"87258059113935689601431668283176323567325417073420817332230462987992804908514094" +
		"79036887868789493054695570307261900950207643349335910602454508645362893545686295" +
		"85313153371838682656178622736371697577418302398600659148161640494496501173213138" +
		"95747062088474802365371031150898427992754426853277974311395143574172219759799359";

	private static final String E_DIGITS =
		"2." +
		"71828182845904523536028747135266249775724709369995957496696762772407663035354759" +
		"45713821785251664274274663919320030599218174135966290435729003342952605956307381" +
		"32328627943490763233829880753195251019011573834187930702154089149934884167509244" +
		"76146066808226480016847741185374234544243710753907774499206955170276183860626133" +
		"13845830007520449338265602976067371132007093287091274437470472306969772093101416" +
		"92836819025515108657463772111252389784425056953696770785449969967946864454905987" +
		"93163688923009879312773617821542499922957635148220826989519366803318252886939849" +
		"64651058209392398294887933203625094431173012381970684161403970198376793206832823" +
		"76464804295311802328782509819455815301756717361332069811250996181881593041690351" +
		"59888851934580727386673858942287922849989208680582574927961048419844436346324496" +
		"84875602336248270419786232090021609902353043699418491463140934317381436405462531" +
		"52096183690888707016768396424378140592714563549061303107208510383750510115747704" +
		"17189861068739696552126715468895703503540212340784981933432106817012100562788023" +
		"51930332247450158539047304199577770935036604169973297250886876966403555707162268" +
		"44716256079882651787134195124665201030592123667719432527867539855894489697096409" +
		"75459185695638023637016211204774272283648961342251644507818244235294863637214174" +
		"02388934412479635743702637552944483379980161254922785092577825620926226483262779" +
		"33386566481627725164019105900491644998289315056604725802778631864155195653244258" +
		"69829469593080191529872117255634754639644791014590409058629849679128740687050489" +
		"58586717479854667757573205681288459205413340539220001137863009455606881667400169" +
		"84205580403363795376452030402432256613527836951177883863874439662532249850654995" +
		"88623428189970773327617178392803494650143455889707194258639877275471096295374152" +
		"11151368350627526023264847287039207643100595841166120545297030236472549296669381" +
		"15137322753645098889031360205724817658511806303644281231496550704751025446501172" +
		"72115551948668508003685322818315219600373562527944951582841882947876108526398139" +
		"55990067376482922443752871846245780361929819713991475644882626039033814418232625" +
		"15097482798777996437308997038886778227138360577297882412561190717663946507063304" +
		"52795466185509666618566470971134447401607046262156807174818778443714369882185596" +
		"70959102596862002353718588748569652200050311734392073211390803293634479727355955" +
		"27734907178379342163701205005451326383544000186323991490705479778056697853358048" +
		"96690629511943247309958765523681285904138324116072260299833053537087613893963917" +
		"79574540161372236187893652605381558415871869255386061647798340254351284396129460" +
		"35291332594279490433729908573158029095863138268329147711639633709240031689458636" +
		"06064584592512699465572483918656420975268508230754425459937691704197778008536273" +
		"09417101634349076964237222943523661255725088147792231519747780605696725380171807" +
		"76360346245927877846585065605078084421152969752189087401966090665180351650179250" +
		"46195013665854366327125496399085491442000145747608193022120660243300964127048943" +
		"90397177195180699086998606636583232278709376502260149291011517177635944602023249" +
		"30028040186772391028809786660565118326004368850881715723866984224220102495055188" +
		"16948032210025154264946398128736776589276881635983124778865201411741109136011649" +
		"95076629077943646005851941998560162647907615321038727557126992518275687989302761" +
		"76114616254935649590379804583818232336861201624373656984670378585330527583333793" +
		"99075216606923805336988795651372855938834998947074161815501253970646481719467083" +
		"48197214488898790676503795903669672494992545279033729636162658976039498576741397" +
		"35944102374432970935547798262961459144293645142861715858733974679189757121195618" +
		"73857836447584484235555810500256114923915188930994634284139360803830916628188115" +
		"03715284967059741625628236092168075150177725387402564253470879089137291722828611" +
		"51591568372524163077225440633787593105982676094420326192428531701878177296023541" +
		"30606721360460003896610936470951414171857770141806064436368154644400533160877831" +
		"43174440811949422975599314011888683314832802706553833004693290115744147563139997" +
		"22170380461709289457909627166226074071874997535921275608441473782330327033016823" +
		"71936480021732857349359475643341299430248502357322145978432826414216848787216733" +
		"67010615094243456984401873312810107945127223737886126058165668053714396127888732" +
		"52737389039289050686532413806279602593038772769778379286840932536588073398845721" +
		"87460210053114833513238500478271693762180049047955979592905916554705057775143081" +
		"75112698985188408718564026035305583737832422924185625644255022672155980274012617" +
		"97192804713960068916382866527700975276706977703643926022437284184088325184877047" +
		"26384403795301669054659374616193238403638931313643271376888410268112198912752230" +
		"56256756254701725086349765367288605966752740868627407912856576996313789753034660" +
		"61666980421826772456053066077389962421834085988207186468262321508028828635974683" +
		"96543588566855037731312965879758105012149162076567699506597153447634703208532156" +
		"03674828608378656803073062657633469774295634643716709397193060876963495328846833" +
		"61303882943104080029687386911706666614680001512114344225602387447432525076938707" +
		"77751932999421372772112588436087158348356269616619805725266122067975406210620806" +
		"49882918454395301529982092503005498257043390553570168653120526495614857249257386" +
		"20691740369521353373253166634546658859728665945113644137033139367211856955395210" +
		"84584072443238355860631068069649248512326326995146035960372972531983684233639046" +
		"32136710116192821711150282801604488058802382031981493096369596735832742024988245" +
		"68494127386056649135252670604623445054922758115170931492187959271800194096886698" +
		"68370373022004753143381810927080300172059355305207007060722339994639905713115870" +
		"99635777359027196285061146514837526209565346713290025994397663114545902685898979" +
		"11583709341937044115512192011716488056694593813118384376562062784631049034629395" +
		"00294583411648241149697583260118007316994373935069662957124102732391387417549230" +
		"71862454543222039552735295240245903805744502892246886285336542213815722131163288" +
		"11205214648980518009202471939171055539011394331668151582884368760696110250517100" +
		"73927623855533862725535388309606716446623709226468096712540618695021431762116681" +
		"40097595281493907222601112681153108387317617323235263605838173151034595736538223" +
		"53499293582283685100781088463434998351840445170427018938199424341009057537625776" +
		"75711180900881641833192019626234162881665213747173254777277834887743665188287521" +
		"56685719506371936565390389449366421764003121527870222366463635755503565576948886" +
		"54950027085392361710550213114741374410613444554419210133617299628569489919336918" +
		"47294785807291560885103967819594298331864807560836795514966364489655929481878517" +
		"84038773326247051945050419847742014183947731202815886845707290544057510601285258" +
		"05659470304683634459265255213700806875200959345360731622611872817392807462309468" +
		"53678231060979215993600199462379934342106878134973469592464697525062469586169091" +
		"78573976595199392993995567542714654910456860702099012606818704984178079173924071" +
		"94599632306025470790177452751318680998228473086076653686685551646770291133682756" +
		"31072233467261137054907953658345386371962358563126183871567741187385277229225947" +
		"43373785695538456246801013905727871016512966636764451872465653730402443684140814" +
		"48873295784734849000301947788802046032466084287535184836495919508288832320652212" +
		"81041904480472479492913422849519700226013104300624107179715027934332634079959605" +
		"31446053230488528972917659876016667811937932372453857209607582277178483361613582" +
		"61289622611812945592746276713779448758675365754486140761193112595851265575973457" +
		"30153336426307679854433857617153334623252705720053039882894990342595662329757824" +
		"88735029259166825894456894655992658454762694528780516501720674785417887982276806" +
		"53665064191097343452887833862172615626958265447820567298775642632532159429441803" +
		"99432170000905426507630955884658951717091476074371368933194690909819045012903070" +
		"99566226620303182649365733698419555776963787624918852865686607600566025605445711" +
		"33728684020557441603083705231224258722343885412317948138855007568938112493538631" +
		"86352870837998456926199817945233640874295911807474534195514203517261842008455091" +
		"70845682368200897739455842679214273477560879644279202708312150156406341341617166" +
		"44806981548376449157390012121704154787259199894382536495051477137939914720521952" +
		"90793961376211072384942906163576045962312535060685376514231153496656837151166042" +
		"20796394466621163255157729070978473156278277598788136491951257483328793771571459" +
		"09106484164267830994972367442017586226940215940792448054125536043131799269673915" +
		"75424192966073123937635421392306178767539587114361040894099660894714183406983629" +
		"93675362621545247298464213752891079884381306095552622720837518629837066787224430" +
		"19579379378607210725427728907173285487437435578196651171661833088112912024520404" +
		"86822000723440350254482028342541878846536025915064452716577000445210977355858976" +
		"22655484941621714989532383421600114062950718490427789258552743035221396835679018" +
		"07640604213830730877446017084268827226117718084266433365178000217190344923426426" +
		"62922614560043373838683355553434530042648184739892156270860956506293404052649432" +
		"44261445665921291225648893569655009154306426134252668472594914314239398845432486" +
		"32746184284665598533231221046625989014171210344608427161661900125719587079321756" +
		"96985440133976220967494541854071184464339469901626983516078489245140589409463952" +
		"67807354579700307051163682519487701189764002827648414160587206184185297189154019" +
		"68825328930914966534575357142731848201638464483249903788606900807270932767312758" +
		"19665639411489617168329804551397295066876047409154204284299935410258291135022416" +
		"90769431668574242522509026939034814856451303069925199590436384028429267412573422" +
		"44776558417788617173726546208549829449894678735092958165263207225899236876845701" +
		"78230380965678831122893058091405726108658848458731016581511675333276748870148291" +
		"67419701512559782572707406431808601428149024146780472327597684269633935773542930" +
		"18673943971638861176420900406866339885684168100387238921448317607011668450388721" +
		"23643670433140911557332801829779887365909166596124020217785588548761761619893707" +
		"94380056663364884365089144805571039765214696027662583599051987042300179465536788" +
		"56743028597460014378548323706870119007849940493091891918164932725977403007487968" +
		"14848823429320230121280323274603922196875283405169069741942576146739781107154641" +
		"86273369091584973185011183960482533518748438923177292613543024932562896371361977" +
		"28545662292446164449728459786771157412567030787188510933634448014967524061853656" +
		"95320741705334867827548278154155619669110551014727990403868972204655508331707823" +
		"94808785990501947563108984124144672821865459971596639015641941751820935932616316" +
		"88838013275875260146050767609839262572641112013528859131784829947568247256488553" +
		"33572797722055435681263025357482165854140008053148206971372621497555760518904816" +
		"22376790414926742600071045922695314835188137463887104273544767623577933993970632" +
		"39660496914530327388787455790593493777232014295480334500069525698093528288778371" +
		"06705855677494813738586303857628230406940056653405848875270053088324591821834943" +
		"18049834199639981458773435863115940570443683515285383609442955964360676090221741" +
		"89688354813164399743776415836524223464261959739045545068069523285075186871944906" +
		"47677918867203064186307510535121498510512073138466487175475183829799901893177515" +
		"50639981016466414592102406838294603208535554058147159273220677567669213664081505" +
		"90080695254061062853640829327662193193993386162383606911176778544823612932685819" +
		"99652392754884274354144028845364555951247355461394031549520973970518962401579768" +
		"32639450633230452192645049651735466775699295718989690470902730288544945416699791" +
		"99294803825498028594602905276314558031651406622917122342937580614399348491436210" +
		"79935767373179489642524888137204355792875113858569733819760835244232404667780209" +
		"48399639946684833774706725483618848273000648319163826022110555221246733323184463" +
		"00550448184991699662208774614021615702102960331858872733329877935257018239386124" +
		"40268683395558706077581699543984695685406711744449324795195721594196458637361269" +
		"15526457574786985964242176592896862383506370433939811671397544736228625506803682" +
		"66413554144804899772137317411919997001729390730335086902092251912444739327837615" +
		"63218108428982077069741387070532661176836986477417871802027294129823108887968318" +
		"80854367327806879771659111654224453806625861711729498038248879986504061563975629" +
		"93696280935818976149101714534355665954275706419440883381684111116620075978724413" +
		"70823339178861147082286575310785366746950184621407364939173662549377830140743026" +
		"68422150335117736471853872324040421037907750266020114814935482228916663640782450" +
		"16681534121350527857853933260611024980227309363674021351538643169301526746053606" +
		"43517321547010914406508788236367642368311873909374642326090216463656275539768340" +
		"19482932795750624399645272578624400375983422050808935129023122475970644105678361" +
		"87087717233355546548259890686120141010722246590400855379823525388517162351825651" +
		"84822031252149507003783004112162121260527260599443204430562745229161288917668141" +
		"60639131235975350390320077529587392412476451850809163911459296071156344204347133" +
		"54472098117846145107787239914060629022827666430926490059224981029106875943453385" +
		"83303911787475759770659535709796400122240921990311582292596679131539915614380701" +
		"29260780197022589662923368154312499412259460023399472228171056603931877226800493" +
		"83314898033854890946868513078929206424281917479586619994441119620873049806438500" +
		"68526202584328420855823385669366498497208170461353761635840153428406741185875815" +
		"46514598270228676671855309311923340191286170613364873183197560812569460089402953" +
		"09442911959029596856392303768997632746228390073545714459641410822928592223933283" +
		"62101928229372435902830038844457013837716320565183519701001157220109569978904849" +
		"64453434612129224964732356126321951155701565824427661599326463155806672053127596" +
		"94853805736420838491888709517605228781733946274764465685890093626612331115291081" +
		"60415241002141959373497864316615567327027921095935430555797326605546779635520053" +
		"78304619540636971842916168582734122217145885870814274090248185446421774876925093" +
		"32878567067467738122675283165355924520457807054135257690325352273896384749564625" +
		"59403789249250076243868937764753101023237467337714745816255306980324990336764554" +
		"30305274561512961214585944432150749051491453950981001388737926379964873728396416" +
		"89755513227596201183824865074698549203809769193260643760874320938560281564284975" +
		"65493079097338541855835157894098140076918923890630905425348838968317629041202129" +
		"49167195811935791203162514344096503132835216728021372415947344095498316138322505" +
		"48670817222147513842516679044541661730320082033090289548880851679725849581340713" +
		"21805339888281393460498505323404725950972143314925866042485114058195797115641914" +
		"58842833000525684776874305916390494306871343118796189637475503362820939949343690" +
		"32103197689811205559536946542470417332389539404603532539675835439535051672026164" +
		"79613477909123279952649290451511483079233693821660107028726519381438448445326395" +
		"17394110131152502750465749343063766541866128915264446926222884366299462732467958" +
		"73638350193714278647139805403821551346322370207153313488708317414659149240635949" +
		"30209211220526103123906829413456967859585183934913823408842743124190991528708043" +
		"32809132993078936867127413922890033069995875921815297612482409116951587789964090";

	private static final long numberValues[] = {
	    1_000_000L,
	    2_458_967L,
	    0L,
	    1L,
	    10L,
	    12L,
	    99L,
	    101L,
	    999L,
	    1_001L,
	    999_999_999L,
	    100_000_000_000L,
	    19_889L,
	    100_100L
	};
	private static final String wordValues[] = {
	    "one million",
	    "two million, four hundred fifty-eight thousand, nine hundred sixty-seven",
	    "zero",
	    "one",
	    "ten",
	    "twelve",
	    "ninety-nine",
	    "one hundred one",
	    "nine hundred ninety-nine",
	    "one thousand, one",
	    "nine hundred ninety-nine million, nine hundred ninety-nine thousand, nine hundred ninety-nine",
	    "one hundred billion",
	    "nineteen thousand, eight hundred eighty-nine",
	    "one hundred thousand, one hundred"
	};
	private static final String romanInputs[] = {
	    "MMXXI", "I", "II", "III", "IV", "V", "VI", "VII", "viii", "IX", "X",
	    "XI", "XII", "XIII", "xiv", "XV", "XVI", "XVIII", "XIX", "XXX", "XXXIX", "XL",
	    "XLI", "XLIV", "XLV", "XLVI", "XLVIII", "L", "LII", "LXXXVIII", "LXXXIX", "XC", "XCI", "XCIV", "XCVI",
	    "XCIX", "C", "CI", "ccxvii", "CCXCIX", "CD", "D", "dxlv", "DCIX", "DCCCXCIX", "M", "MI",
	    "mcmlxvii", "MM", "MMI", "MMMCMXCIX"
	};
	private static final int romanValues[] = {
	    2021, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
	    11, 12, 13, 14, 15, 16, 18, 19, 30, 39, 40,
	    41, 44, 45, 46, 48, 50, 52, 88, 89, 90, 91, 94, 96,
	    99, 100, 101, 217, 299, 400, 500, 545, 609, 899, 1000, 1001,
	    1967, 2000, 2001, 3999
	};


	public static void main(final String[] args) {
	    int numberOfTests    = 0;
	    int numberOfFailures = 0;

	    int[] scales = {   1,    2,     3,     4,     5,   6,   7,   8,   9,  10,   11,   13,  17,
			      19,   23,    24,    25,    30,  43,  50,  57,  67,  71,   89,   97, 100,
			     111,  137,   197,   200,   203, 219, 373, 500, 750, 999, 1200, 2000, 3000,
			    5000, 9999, 10000, 12000, 10000 };

	    for (int i = 0; i < scales.length; i++) {
		int digits = scales[i];
		numberOfTests += 2;
		System.out.println("Testing PI and E calculation for " + digits + " digits...");

		BigDecimal piCalc = MathUtil.pi(digits);
		BigDecimal eCalc  = MathUtil.e(digits);
		String piCalcDigits = piCalc.toPlainString();
		String eCalcDigits  = eCalc.toPlainString();
		String piKnownDigits = PI_DIGITS.substring(0, digits + 2);
		String eKnownDigits  = E_DIGITS.substring(0, digits + 2);

		if (!piCalcDigits.equals(piKnownDigits)) {
		    System.err.println("Calculated PI value with " + digits + " digits is WRONG!");
		    System.err.println("Calc\t" + piCalcDigits);
		    System.err.println("Known\t" + piKnownDigits);
		    numberOfFailures++;
		}
		if (!eCalcDigits.equals(eKnownDigits)) {
		    System.err.println("Calculated E value with " + digits + " digits is WRONG!");
		    System.err.println("Calc\t" + eCalcDigits);
		    System.err.println("Known\t" + eKnownDigits);
		    numberOfFailures++;
		}
	    }

	    System.out.println("Done with PI and E tests.");

	    System.out.println("Testing 'convertToWords' function...");

	    numberOfTests++;
	    if (numberValues.length != wordValues.length) {
		System.err.println("Test malfunction: input and test value arrays are unequal!");
		numberOfFailures++;
	    }
	    else {
		for (int i = 0; i < numberValues.length; i++) {
		    numberOfTests++;
		    String result = NumericUtil.convertToWords(numberValues[i]);
		    if (!result.equals(wordValues[i])) {
			System.err.println("Result of 'convertToWords' for " + numberValues[i] + " = '" + result + "'");
			System.err.println("  did not equal expected result of '" + wordValues[i] + "'");
			numberOfFailures++;
		    }
		}
	    }

	    System.out.println("Done with 'convertToWords' tests.");

	    System.out.println("Tests of Read/Write Binary Files...");

	    Charset cs = StandardCharsets.UTF_8;

	    numberOfTests++;
	    try {
		final BigDecimal vPi = MathUtil.pi(40);
		final String vStr    = "This is a simple string.";
		final long vMaxLong  = Long.MAX_VALUE;
		final Boolean vTrue  = Boolean.TRUE;

		File tempFile = FileUtilities.createTempFile("binary", true);
		try (DataOutputStream dos = new DataOutputStream(Files.newOutputStream(tempFile.toPath()))) {
		    NumericUtil.writeBinaryValue(vPi,      dos, cs);
		    NumericUtil.writeBinaryValue(vStr,     dos, cs);
		    NumericUtil.writeBinaryValue(vMaxLong, dos, cs);
		    NumericUtil.writeBinaryValue(vTrue,    dos, cs);
		}
		try (DataInputStream dis = new DataInputStream(Files.newInputStream(tempFile.toPath()))) {
		    Object obj = NumericUtil.readBinaryValue(dis, cs);
		    if (!(obj instanceof BigDecimal) || ! ((BigDecimal)obj).equals(vPi)) {
			System.err.println("Mismatch on BigDecimal value: expecting " + vPi.toPlainString() + "\n  but got " + obj);
			numberOfFailures++;
		    }
		    obj = NumericUtil.readBinaryValue(dis, cs);
		    if (!(obj instanceof String) || ! ((String)obj).equals(vStr)) {
			System.err.println("Mismatch on String value: expecting " + vStr + "\n  but got " + obj);
			numberOfFailures++;
		    }
		    obj = NumericUtil.readBinaryValue(dis, cs);
		    if (!(obj instanceof Long) || ! ((Long)obj).equals(vMaxLong)) {
			System.err.println("Mismatch on Long value: expecting " + vMaxLong + "\n  but got " + obj);
			numberOfFailures++;
		    }
		    obj = NumericUtil.readBinaryValue(dis, cs);
		    if (!(obj instanceof Boolean) || !((Boolean)obj).equals(vTrue)) {
			System.err.println("Mismatch on Boolean value: expecting " + vTrue + "\n  but got " + obj);
			numberOfFailures++;
		    }
		}
	    }
	    catch (IOException ioe) {
		numberOfFailures++;
	    }

	    System.out.println("Done with Read/Write Binary Files.");

	    System.out.println("Testing BigFraction...");

	    BigFraction f1 = new BigFraction(1L, 7L);
	    System.out.println("1/7 = " + f1);
	    BigFraction f2 = new BigFraction(2L, 3L);
	    BigFraction f3 = f1.multiply(f2);
	    System.out.println("1/7 * 2/3 = " + f3);
	    BigFraction f4 = f1.multiply(f1);
	    System.out.println("1/7 * 1/7 = " + f4);
	    BigFraction f5 = new BigFraction(49, 5);
	    System.out.println("49/5 = " + f5 + " = " + f5.toProperString());
	    BigFraction f6 = new BigFraction(137, 19);
	    BigFraction f7 = f6.divide(f6);
	    System.out.println("137/19 = " + f6 + " = " + f6.toProperString() + "; " + f6 + " / " + f6 + " = " + f7 + " = " + f7.toProperString());
	    BigFraction f8 = new BigFraction(3, 5);
	    BigFraction f9 = new BigFraction(10, 3);
	    BigFraction f10 = f8.multiply(f9);
	    System.out.println(f8 + " * " + f9 + " = " + f10 + " = " + f10.toProperString());
	    BigFraction f11 = new BigFraction(10, 11);
	    BigFraction f12 = new BigFraction(4, 11);
	    BigFraction f13 = f11.add(f12);
	    System.out.println(f11 + " + " + f12 + " = " + f13 + ", " + f13.toProperString());
	    BigFraction f14 = f13.negate();
	    System.out.println("-" + f13 + " = " + f14 + " = " + f14.toProperString());
	    BigFraction f15 = f12.subtract(f11);
	    System.out.println(f12 + " - " + f11 + " = " + f15 + " = " + f15.toProperString());
	    BigFraction f16 = new BigFraction(3);
	    BigFraction f17 = f15.add(f16);
	    System.out.println(f15 + " + " + f16 + " = " + f17 + " = " + f17.toProperString());
	    BigFraction f18 = new BigFraction(412, 9);
	    BigFraction f19 = new BigFraction(3791, 15862);
	    BigFraction f20 = f18.multiply(f19);
	    System.out.println(f18 + " * " + f19 + " = " + f20 + " = " + f20.toProperString());
	    System.out.println(f20 + " = " + f20.toDecimal().toPlainString());

	    String s1 = "1 2/3";
	    BigFraction f21 = BigFraction.valueOf(s1);
	    System.out.println(s1 + " = " + f21 + ", " + f21.toProperString());
	    BigFraction f22 = new BigFraction("3", "4", "9");
	    System.out.println("3 and 4 / 9 = " + f22 + ", " + f22.toProperString());
	    BigDecimal d1 = new BigDecimal("1.375");
	    BigFraction f23 = new BigFraction(d1);
	    System.out.println(d1.toPlainString() + " = " + f23 + ", " + f23.toProperString());
	    BigDecimal d2 = new BigDecimal("0.0085");
	    BigFraction f24 = new BigFraction(d2);
	    System.out.println(d2.toPlainString() + " = " + f24 + ", " + f24.toProperString());
	    BigFraction f25 = BigFraction.valueOf("4 / 7");
	    BigFraction f26 = BigFraction.valueOf("5, 9");
	    System.out.println(f25 + " cmp " + f26 + " = " + f25.compareTo(f26));
	    BigFraction f27 = BigFraction.valueOf("3/12");
	    System.out.println("3 twelfths = " + f27);
	    BigFraction f28 = BigFraction.valueOf("1 11/15");
	    System.out.println("one and eleven/fifteenths = " + f28.toProperString());
	    BigFraction fPi = new BigFraction(8958937768937L, 2851718461558L);
	    BigDecimal dPi = MathUtil.pi(MathContext.DECIMAL128.getPrecision());
	    System.out.println(fPi + " -> " + fPi.toDecimal().toPlainString());
	    System.out.println("                           vs. " + dPi.toPlainString());

	    // Results verified manually, will be put into the canon file
	    numberOfTests += 28;

	    System.out.println("Done with BigFraction tests.");

	    // Tests of Roman Numerals
	    System.out.println("Testing Roman numerals...");

	    if (romanInputs.length != romanValues.length) {
		System.err.println("Roman numeral test data out of sync!  Please check the code.");
		numberOfTests++;
		numberOfFailures++;
	    }

	    for (int i = 0; i < romanInputs.length; i++) {
		numberOfTests += 2;
		String input = romanInputs[i];
		int value = NumericUtil.convertFromRoman(input);
		int expected = romanValues[i];
		String converted = NumericUtil.convertToRoman(value);
		if (value != expected) {
		    System.err.println("Input '" + input + "' produced " + value + ", but expected " + expected);
		    numberOfFailures++;
		}
		else if (!converted.equals(input.toUpperCase())) {
		    System.err.println("Value of " + value + " produced '" + converted + "', but expected '" + input + "'");
		    numberOfFailures++;
		}
		else {
		    System.out.println("Input '" + input + "' -> " + value);
		}
	    }

	    System.out.println("Done with Roman numeral tests.");

	    System.out.println("Total number of tests: " + numberOfTests +
		", passed: " + (numberOfTests - numberOfFailures) + ", failed: " + numberOfFailures);
	}

}

