#
# The MIT License (MIT)
#
# Copyright (c) 2014-2016,2020-2022 Roger L. Whitcomb.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#	Internationalizable strings for the info.rlwhitcomb.csv stuff.
#
# History:
#	04-Mar-2014 (rlwhitcomb)
#	    Moved into here from the .java files.
#	13-Mar-2014 (rlwhitcomb)
#	    Add field number to the CSVTest output.  Add some more
#	    error messages during parsing.
#	07-Jan-2015 (rlwhitcomb)
#	    Removed an unused error message.
#	28-Jun-2016 (rlwhitcomb)
#	    New error messages from the CSVTest program; remove one unused one;
#	    some rewording of other errors.
#	27-Feb-2020 (rlwhitcomb)
#	    One more error from CSVTest (and the new Separator option).
#	10-Mar-2020 (rlwhitcomb)
#	    Prepare for GitHub.
#	13-Nov-2020 (rlwhitcomb)
#	    Tweak messages a little. Add a new tester error.
#	02-Mar-2021 (rlwhitcomb)
#	    New options for CSVTest. Update help (with colors).
#	15-Dec-2021 (rlwhitcomb)
#	    #150: Update options for CSVTest. Fix help colors.
#	01-Feb-2022 (rlwhitcomb)
#	    #156: Properly quote value strings on output.
#	05-May-2022 (rlwhitcomb)
#	    #308: Change reset color tag.
#

#
# From CSVFormat.java
#
format.quoteNotNull		= Quote character must not be null.
format.quoteNotEscape		= Quote character must not be the same as escape character.
format.fieldSepNotNull		= Field separator must not be null.
format.recordSepTwoChars	= Record separator must be two characters or less.
format.recordSepTwoDifferent	= Two record separator characters must be different.
format.recordSepStandard	= Record separator can only be one character except for CR and LF combinations.
format.escapeNotQuote		= Escape character must not be the same as quote character.

#
# From CSVParser.java
#
parser.readerNotNull		= Reader cannot be null.
parser.unterminatedToken	= Unterminated token at end of input (offset %1$d).
parser.readingException		= Exception while reading input at offset %1$d
parser.unexpectedEOF		= Unexpected end of file while parsing input at offset %1$d.

#
# From CSVReader.java and CSVRecord.java
#
removeNotSupported		= "Remove" is not supported.

#
# From CSVRecord.java
#
record.indexOutOfRange		= Index %1$d is not in the range 0..%2$d

#
# From CSVWriter.java
#
writer.writerNotNull		= Writer must not be null.
writer.noWriteAfterClose	= Trying to write a record after output has been closed.
writer.writingException		= Exception while writing output

#
# From CSVTest.java
#
test.help1			= ""
test.help2			= <Bk!>Usage: <Gr>options<--> <Cy>file name(s)<-->
test.help3			= ""
test.help4			= Where the possible <Gr>options<--> are:
test.help5			= \t<Gr>-8<-->   = use the UTF-8 character set to read and write files (default to system charset)
test.help6			= \t<Gr>-q<Bk!>x<-->  = set the quote character to '<Bk!>x<.>' (default is '<Bk!>"<.>')
test.help7			= \t<Gr>-Q<Bk!>xx<--> = set the quote character to a standard value ('<Bk!>single<.>', '<Bk!>double<.>', etc.)
test.help8			= \t<Gr>-d<Bk!>x<-->  = set the column delimiter to '<Bk!>x<.>' (default is '<Bk!>,<.>')
test.help9			= \t<Gr>-D<Bk!>xx<--> = set the column delimiter to a standard value ('<Bk!>comma<.>', '<Bk!>space<.>', etc.)
test.help10			= \t<Gr>-r<Bk!>x<-->  = set the record separator to '<Bk!>x<.>' (default is CR,LF)
test.help11			= \t<Gr>-S<Bk!>xx<--> = set the record separator to a standard value ('<Bk!>newline<.>', '<Bk!>semicolon<.>', etc.)
test.help12			= \t<Gr>-e<Bk!>x<-->  = set the escape charater to '<Bk!>x<.>' (default is '<Bk!>\\<.>')
test.help13			= \t<Gr>-a<-->   = always delimit strings (default is not)
test.help14			= \t<Gr>-u<-->   = preserve quotes (default is not)
test.help15			= \t<Gr>-w<-->   = preserve whitespace in unquoted fields (default is not)
test.help16			= \t<Gr>-E<-->   = set to no escape character in strings
test.help17			= \t<Gr>-B<-->   = set the column delimiter to a blank
test.help18			= \t<Gr>-T<-->   = set the column delimiter to a tab character
test.help19			= \t<Gr>-R<-->   = set the record separator to CR
test.help20			= \t<Gr>-L<-->   = set the record separator to LF
test.help21			= \t<Gr>-H<-->   = data contains a header row (default is not)
test.help22			= \t<Gr>-I<-->   = ignore empty lines (default is not)
test.help23			= \t<Gr>-W<-->   = enable writeback mode, where the contents are written back out
test.help24			= \t       and then read back in and compared to the original parsed values.
test.help25			= \t<Gr>-i<-->   = use "iterator" for testing.
test.help26			= ""

test.onlyOneChar		= Only one character allowed for the "-%1$s" option!
test.unknownOption		= Unknown option "-%1$s"!
test.unknownQuote		= Unknown quote option "%1$s"!
test.unknownDelim		= Unknown delimiter option "%1$s"!
test.unknownSeparator		= Unknown separator option "%1$s"!
test.noInputFiles		= No input files specified.
test.recordNum			= Record %1$d:
test.record			= %1$5d. %2$s
test.separator			= "============================="
test.outputNoInput		= Record #%1$d: output record but no input record
test.lengthMismatch		= Record #%1$d: length mismatch: input len=%2$d, output len=%3$d
test.mismatchFieldCount		= Record #%1$d: number of fields (%2$d) does not match number in first row (%3$d)
test.fieldMismatch		= Record #%1$d, field #%2$d: mismatch: input='%3$s', output='%4$s'
test.inputNoOutput		= Record #%1$d: input record has no output record
test.inputEqualsOutput		= Output file exactly equals original input file "%1$s".
test.inputNotEqualOutput	= Output file "%1$s" does not match original input file "%2$s":%n  %3$d record errors, %4$d length errors, %5$d compare errors
