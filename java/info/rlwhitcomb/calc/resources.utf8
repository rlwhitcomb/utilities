#
# The MIT License (MIT)
#
# Copyright (c) 2021-2024 Roger L. Whitcomb.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#       Internationalizable strings for the info.rlwhitcomb.calc code.
#
# History:
#       18-Jan-2021 (rlwhitcomb)
#           Moved into here from the .java files.
#	18-Jan-2021 (rlwhitcomb)
#	    Action messages.
#	18-Jan-2021 (rlwhitcomb)
#	    Results and other colored messages.
#	25-Jan-2021 (rlwhitcomb)
#	    One more error message.
#	30-Jan-2021 (rlwhitcomb)
#	    One more action message and more errors; calc mode strings.
#	02-Feb-2021 (rlwhitcomb)
#	    Another error.
#	08-Feb-2021 (rlwhitcomb)
#	    One more error.
#	10-Feb-2021 (rlwhitcomb)
#	    Move the INTRO text here as "help".
#	16-Feb-2021 (rlwhitcomb)
#	    Another action message to define a function.
#	19-Feb-2021 (rlwhitcomb)
#	    Error message for bad format.
#	22-Feb-2021 (rlwhitcomb)
#	    Refactor "loopvar" to "localvar".
#	22-Feb-2021 (rlwhitcomb)
#	    New syntax error messages.
#	23-Feb-2021 (rlwhitcomb)
#	    Timing mode message.
#	15-Mar-2021 (rlwhitcomb)
#	    Tweak an error message.
#	25-Mar-2021 (rlwhitcomb)
#	    New errors for FILL.
#	20-Apr-2021 (rlwhitcomb)
#	    Tweak "defining" to add function parameters.
#	20-Apr-2021 (rlwhitcomb)
#	    Text for "Variables" directive in non-REPL mode.
#	28-Apr-2021 (rlwhitcomb)
#	    "and" for the list of multiple variables cleared.
#	02-Jul-2021 (rlwhitcomb)
#	    Separator mode.
#	09-Aug-2021 (rlwhitcomb)
#	    Tweak an error message, and add another.
#	23-Aug-2021 (rlwhitcomb)
#	    Add a "resultGUI" text with a nice arrow symbol.
#	24-Aug-2021 (rlwhitcomb)
#	    New error for converting int to codepoint.
#	25-Aug-2021 (rlwhitcomb)
#	    New error message for attempted assignments to the global arguments.
#	01-Sep-2021 (rlwhitcomb)
#	    Error for bad input charset.
#	15-Sep-2021 (rlwhitcomb)
#	    Add more color tags to error messages.
#	26-Sep-2021 (rlwhitcomb)
#	    Remove quotes around colored phrases.
#	06-Oct-2021 (rlwhitcomb)
#	    Errors from Scope. Remove now unneeded messages.
#	08-Oct-2021 (rlwhitcomb)
#	    Undefined function error.
#	19-Oct-2021 (rlwhitcomb)
#	    Errors for "replace". Errors for "splice".
#	28-Oct-2021 (rlwhitcomb)
#	    New error for predefined value assignment.
#	07-Nov-2021 (rlwhitcomb)
#	    #69: New error for varargs.
#	11-Nov-2021 (rlwhitcomb)
#	    #81: New option for quoting strings.
#	28-Nov-2021 (rlwhitcomb)
#	    #111: New color attributes for values that should be quoted
#	    when not colored.
#	03-Dec-2021 (rlwhitcomb)
#	    #116: New format for timing message.
#	28-Dec-2021 (rlwhitcomb)
#	    #128: Generalize "fill" errors for "pad" also.
#	31-Dec-2021 (rlwhitcomb)
#	    #180: New error for scale value in formats.
#	01-Jan-2022 (rlwhitcomb)
#	    #175: New format for decimal message to display precision.
#	    #177: Library version mismatch error.
#	04-Jan-2022 (rlwhitcomb)
#	    #194: New comment to explain library versions.
#	09-Jan-2022 (rlwhitcomb)
#	    #153: New error from command-line declaration.
#	21-Jan-2022 (rlwhitcomb)
#	    #135: New defining message and new error for "const" declarations.
#	24-Jan-2022 (rlwhitcomb)
#	    #223: New ":predefined" command messages.
#	05-Feb-2022 (rlwhitcomb)
#	    #233: Remove the "precision out of range" message (unused now).
#	    Also add in the "immutableObject" message for "settings".
#	    New "one digit" precision message.
#	13-Feb-2022 (rlwhitcomb)
#	    #199: Change messages for read-only variables.
#	24-Mar-2022 (rlwhitcomb)
#	    Fix the command listing in the help message.
#	28-Apr-2022 (rlwhitcomb)
#	    #68: Tweak indexOutOfBounds and indexNegative errors.
#	05-May-2022 (rlwhitcomb)
#	    #308: Change reset color tag.
#	    #298: Add "within" to "loop" statements and "in" expressions.
#	07-May-2022 (rlwhitcomb)
#	    #292: Revise version check errors.
#	17-May-2022 (rlwhitcomb)
#	    #333: Reword awkward error message.
#	23-May-2022 (rlwhitcomb)
#	    Rework the "expectNotOption" message.
#	11-Jun-2022 (rlwhitcomb)
#	    #365: New message for immutable array.
#	23-Jun-2022 (rlwhitcomb)
#	    #314: Message for immutable set.
#	24-Jun-2022 (rlwhitcomb)
#	    #373: Error for "exists" function.
#	27-Jun-2022 (rlwhitcomb)
#	    #376: Move "exists" flags error.
#	29-Jun-2022 (rlwhitcomb)
#	    #383: New action message for "var" definition.
#	07-Jul-2022 (rlwhitcomb)
#	    #389: New message when "var" has no initial value.
#	10-Jul-2022 (rlwhitcomb)
#	    #392: Option to sort objects by keys.
#	29-Jul-2022 (rlwhitcomb)
#	    #402: New base lib version error message.
#	09-Aug-2022 (rlwhitcomb)
#	    #436: Remove unused predef message, add key messages.
#	16-Aug-2022 (rlwhitcomb)
#	    #439: New error for "next" in the wrong context.
#	23-Aug-2022 (rlwhitcomb)
#	    #455: New error for bad argument to "chars" or "codes".
#	25-Aug-2022 (rlwhitcomb)
#	    #466: "Defined" messages as return values (for "eval" purposes).
#	28-Aug-2022 (rlwhitcomb)
#	    #464: New error for "-output" in GUI mode. Tweak I/O error message.
#	01-Sep-2022 (rlwhitcomb)
#	    Tweak two error messages.
#	20-Oct-2022 (rlwhitcomb)
#	    New error message for undefined flags.
#	25-Oct-2022 (rlwhitcomb)
#	    #534: New error for duplicate constant.
#	09-Nov-2022 (rlwhitcomb)
#	    #550: New "assert failure" message.
#	30-Nov-2022 (rlwhitcomb)
#	    #566: New messages for multiple constants and variables.
#	05-Dec-2022 (rlwhitcomb)
#	    #573: Error messages for "scan".
#	31-Dec-2022 (rlwhitcomb)
#	    #558: New error message for "unimplemented".
#	09-Mar-2023 (rlwhitcomb)
#	    Update the REPL help message a little bit.
#	09-Apr-2023 (rlwhitcomb)
#	    #603: Update REPL help for new directive/command format.
#	17-May-2023 (rlwhitcomb)
#	    #611: Reword an error message.
#	12-Jun-2023 (rlwhitcomb)
#	    #616: New error message for CalcDisplayer.Output.
#	09-Aug-2023 (rlwhitcomb)
#	    #621: Output messages for "enum".
#	18-Sep-2023 (rlwhitcomb)
#	    Update the "undefined function" error message.
#	29-Sep-2023 (rlwhitcomb)
#	    #622: Brighten the actual error message in the assertion message.
#	    Add "f" for the RED_BOLD_BRIGHT color or left quote.
#	06-Dec-2023 (rlwhitcomb)
#	    #600: New error for labeled "leave" statement.
#	03-Jan-2024 (rlwhitcomb)
#	    #640: Error for CalcPiWorker.
#	17-Jan-2024 (rlwhitcomb)
#	    #646: New error for multiple assignment.
#	22-Mar-2024 (rlwhitcomb)
#	    #664: Error for unknown parameter names.
#	26-Mar-2024 (rlwhitcomb)
#	    #666: Starting and ending punctuation values for "$echo" spacing.
#	06-May-2024 (rlwhitcomb)
#	    #672: Message for displaying proper fractions mode.
#	22-Jul-2024 (rlwhitcomb)
#	    #686: Message changes and additions for separate variable/function clearing.
#	25-Jul-2024 (rlwhitcomb)
#	    #686: Change "Variables" to "Variables and Functions" for the "$vars" directive also.
#

#
# Note: <v> is VALUE_COLOR
#	<u> is VALUE_COLOR or left quote
#	<a> is ARROW_COLOR
#	<x> is EXPR_COLOR
#	<y> is EXPR_COLOR or left quote
#	<e> is ERROR_COLOR
#	<f> is RED_BOLD_BRIGHT or left quote
#	<r> is RESET
#	<.> resets to previous color or right quote
#

#
# From Calc.java
#
resultOnly	= <v>%1$s<r>
result		= <x>%1$s<a> -> <v>%2$s<r>
resultGUI	= <x>%1$s<a> \u21e8 <v>%2$s<r>
action		= <x>%1$s<r>
message		= <a>%1$s<r>
errorLine	= <e>%1$s<r> at line %2$d.
error		= <e>%1$s<r>
errorPeriod	= <e>%1$s.<r>
defineKey	= <a>define<x> %1$s
constKey	= <a>const<x> %1$s
enumKey		= <a>enum<x> %1$s
varKey		= <a>var<x> %1$s
expectNotOption	= <e>Expecting <y>%1$s<.> value, not the <v>%2$s<.> option.<r>
expectValue	= <e>Expecting <y>%1$s<.> value.<r>
noOptionValue	= <e>Value for <y>%1$s<.> option was not given.<r>
unknownOption	= Unknown option <u>%1$s<.>; ignoring.
inOutError	= <e>I/O Error: %1$s<r>
argError	= Error: %1$s
charsetError	= <e>Problem with character set <y>%1$s<.>: %2$s<r>
declError	= <e>Improper syntax for variable declaration: <y>%1$s<.><r>
noOuputGuiMode	= Redirecting output streams not available in GUI mode.
timing		= Parse time %1$11.9f secs. Execution time %2$11.9f secs. Total elapsed time %3$11.9f seconds.
syntaxError	= Syntax error at position %1$d: %2$s
errorNoAlt	= Syntax error at position %1$d: no viable alternative at input <y>%2$s<.>
nextError	= The <y>next<.> statement is only allowed inside <y>loop<.> or <y>while<.>.
missingLeaveLabel= Label <y>%1$s<.> from <u>leave<.> statement was not found.
badScanPattern	= Scan pattern <y>%1$s<.> is badly formed.
scanPatternError= The input doesn't match the pattern <y>%1$s<.>
illegalScanType	= Unknown scan pattern <y>%%%1$c<.>

libVersionMismatch	= The required version <y>%1$s<.> is not compatible with the current version <y>%2$s<.>.
baseVersionMismatch	= The required base version <y>%1$s<.> is not compatible with the current version <y>%2$s<.>.
versionParseError	= Problem with the required version number: %1$s
libVersionDescription	= // The versions above must conform to the latest values in "version.properties" and "build.properties"

#
# From CalcObjectVisitor
#
precUnlimited	= Precision is now <u>UNLIMITED<.>.
precOneDigit	= Precision is now <u>one<.> digit.
precDigits	= Precision is now <u>%1$d<.> digits.
trigMode	= Trig mode is now <u>%1$s<.>.
unitsBinary	= Units in <u>binary<.>.
unitsTen	= Units in <u>SI (base ten)<.> form.
unitsMixed	= Units in <u>mixed<.> form.
varsAllCleared	= All variables and functions cleared.
varOneVariable	= "Variable "
varOneFunction	= "Function "
varVariables	= "Variables "
varFunctions	= "Functions "
varCleared	= %1$s cleared.
varBothCleared	= %1$s plus %2$s cleared.
varAnd		= "and "
timingMode	= Timing mode set to <u>%1$s<.>.
debugMode	= Debug mode set to <u>%1$s<.>.
rationalMode	= Calculation mode set to <u>%1$s<.>.
separatorMode	= Separator display set to <u>%1$s<.>.
ignoreCaseMode  = Ignoring case is now <u>%1$s<.>.
quoteStringsMode= Quoting result strings is now <u>%1$s<.>.
properFractionsMode= Displaying proper fractions is now <u>%1$s<.>.
sortKeysMode	= Sorting objects by keys is now <u>%1$s<.>.
definingFunc	= <r>Defining function <y>%1$s<.><r> = <v>%2$s<r>
definingConst	= <r>Defining constant <y>%1$s<.><r> = <v>%2$s<r>
definingVar	= <r>Defining variable <y>%1$s<.><r> = <v>%2$s<r>
definingVarOnly	= <r>Defining variable <y>%1$s<.><r>
definingEnum	= <r>Defining enum value <y>%1$s<.><r> = <v>%2$s<r>
definedFunc	= Defined function <y>%1$s<.>
definedConst	= Defined constant <y>%1$s<.>
definedConsts	= Defined constants <y>%1$s<.>
definedVar	= Defined variable <y>%1$s<.>
definedVars	= Defined variables <y>%1$s<.>
definedEnum	= Defined enum value <y>%1$s<.>
definedEnums	= Defined enum values <y>%1$s<.>
variables	= Variables and Functions
varUnder1	= -----------------------
varUnder2	= =======================
predefined	= Predefined
preUnder1	= ----------
preUnder2	= ==========
# These two should (probably) not be translated
rational	= RATIONAL
decimal		= DECIMAL(%1$s)
unlimited	= UNLIMITED

precNotInteger		= Decimal precision of <u>%1$s<.> must be a 32-bit integer value
charOutOfRange		= Integer value of <u>0x%1$08X<.> out of range of Unicode characters (0..0x10FFFF)
ioError			= I/O Error: %1$s
noConvertInteger	= Unable to convert value of <y>%1$s<.> to an integer
noConvertObjArr		= Cannot convert object or array to <y>%1$c<.> format
noScaleFormat		= Format with scale (<u>.%1$d<.>) value not supported in <y>%2$c<.> format
noDupLocalVar		= Duplicate local variable name <y>%1$s<.> not allowed
noDupConstant		= Duplicate constant name <y>%1$s<.> not allowed
localVarNoAssign	= The value of the local variable <y>%1$s<.> cannot be changed directly
globalArgNoAssign	= The value of the global argument <y>%1$s<.> cannot be changed directly
mustBeObject		= Source variable type <y>%1$s<.> must be an object
mustBeArray		= Source variable type <y>%1$s<.> must be an array
undefined		= Variable <y>%1$s<.> is not defined
infLoopStepZero		= Infinite loop: step value is zero
invalidConstruct	= Invalid <y>$<.> construct
invalidConst2		= Invalid <y>${...}<.> construct
modeError		= Mode option <y>%1$s<.> not recognized
replaceOptionError	= Replace option <y>%1$s<.> not recognized
illegalFormat		= Unrecognized format <y>%1$s<.>
targetWrongType		= Target of a <y>%1$s<.> must be an array or string
oneCharInt		= %1$s value for a string must be one character or an integer \u2264 65535
undefinedFunction	= Cannot call undefined function <y>%1$s(...)<.>
withinNotAllowed	= Specifying <y>within<.> is only allowed with an end value with implied start
illegalArgument		= <u>%1$s<.> value is not suitable for <y>%2$s<.> function
radixOutOfRange		= Radix value of <u>%1$d<.> is out of range of <y>%2$d..%3$d<.>
illegalFlagValues	= One or more flag values in <u>0x%1$04X<.> (<u>%1$d<.>) is not valid.
assertFailure		= Assertion failed: <f>%1$s<.>
notImplemented		= %1$s operation is not implemented
mismatchVarExpr		= Number of expressions <y>(%1$d)<.> does not equal the number of variables <y>(%2$d)<.>
validStartPunct		= ([{'"`
validEndPunct		= .,;:!?)]}'"`

intro.help1	= "  Enter an arithmetic expression to evaluate, or multiple expressions"
intro.help2	= "  separated by <u>;<.>, followed by <a>Return<.> or <a>Enter<.>."
intro.help3	= ""
intro.help4	= "  Use <u>$help<.> or <u>$?<.> to display the help page in your browser."
intro.help5	= "  Enter <u>$quit<.> or <u>$exit<.> to end."
intro.help6	= "  Use <u>$gui<.> to switch to GUI mode."
intro.help7	= "  The <u>$version<.> command is also available here."
intro.help8	= ""

#
# From CalcDisplayer
#
unknownOutput		= Unknown output type: <y>%1$s<.>

#
# From CalcUtil
#
valueNotNull		= Value of <y>%1$s<.> must not be null
noConvertDecimal	= Unable to convert value of <y>%1$s<.> type to decimal number
noConvertFraction	= Unable to convert value of <y>%1$s<.> type to fraction
unknownType		= Unknown value type: <y>%1$s<.>

#
# From CalcPiWorker
#
workerNotStarted	= Values of \u213C and \u2147 are not available.

#
# From LValueContext
#
localVarNotAvail	= Local variable <y>%1$s<.> is not available
nonObjectValue		= Cannot access a member of variable <y>%1$s<.> which is type %2$s
nonArrayValue		= Cannot index into variable <y>%1$s<.> which is type %2$s
callNotAFunction	= Cannot make a function call on the non-function value <y>%1$s<.>
indexNegative		= Effective index value of <u>%1$d<.> cannot be negative
unknownVarCtx		= Unknown variable context subclass: <y>%1$s<.>
badAssign		= Assignment to <y>%1$s<.> without name or index
tooManyForOneValue	= Too many actual values (%1$d) passed for only one parameter declared
tooManyForValues	= Too many actual values (%1$d) passed for only %2$d parameters declared
noChangeValue		= Cannot change %1$s <y>%2$s%3$s<.>

#
# From UnknownOpException
#
unknownOp		= Unknown operator <y>%1$s<.>

#
# From ArrayScope
#
indexOutOfBounds	= Index value of <u>%1$d<.> is out of bounds of <y>0..%2$d<.>
immutableArray		= Cannot change values in a constant array.

#
# From SetScope
#
immutableSet		= Cannot change values in a constant set.

#
# From FunctionDeclaration
#
varargsLast		= Variable argument declaration must be last in the parameter list
noNamedParams		= Actual parameters named <u>%1$s<.> do not match any formal parameter names

#
# From ObjectScope
#
immutableObject		= Cannot add or update the <y>%1$s<.> member in this constant object.

