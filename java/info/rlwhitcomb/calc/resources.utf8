#
# The MIT License (MIT)
#
# Copyright (c) 2021-2022 Roger L. Whitcomb.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
#       Internationalizable strings for the info.rlwhitcomb.calc code.
#
# History:
#       18-Jan-2021 (rlwhitcomb)
#           Moved into here from the .java files.
#	18-Jan-2021 (rlwhitcomb)
#	    Action messages.
#	18-Jan-2021 (rlwhitcomb)
#	    Results and other colored messages.
#	25-Jan-2021 (rlwhitcomb)
#	    One more error message.
#	30-Jan-2021 (rlwhitcomb)
#	    One more action message and more errors; calc mode strings.
#	02-Feb-2021 (rlwhitcomb)
#	    Another error.
#	08-Feb-2021 (rlwhitcomb)
#	    One more error.
#	10-Feb-2021 (rlwhitcomb)
#	    Move the INTRO text here as "help".
#	16-Feb-2021 (rlwhitcomb)
#	    Another action message to define a function.
#	19-Feb-2021 (rlwhitcomb)
#	    Error message for bad format.
#	22-Feb-2021 (rlwhitcomb)
#	    Refactor "loopvar" to "localvar".
#	22-Feb-2021 (rlwhitcomb)
#	    New syntax error messages.
#	23-Feb-2021 (rlwhitcomb)
#	    Timing mode message.
#	15-Mar-2021 (rlwhitcomb)
#	    Tweak an error message.
#	25-Mar-2021 (rlwhitcomb)
#	    New errors for FILL.
#	20-Apr-2021 (rlwhitcomb)
#	    Tweak "defining" to add function parameters.
#	20-Apr-2021 (rlwhitcomb)
#	    Text for "Variables" directive in non-REPL mode.
#	28-Apr-2021 (rlwhitcomb)
#	    "and" for the list of multiple variables cleared.
#	02-Jul-2021 (rlwhitcomb)
#	    Separator mode.
#	09-Aug-2021 (rlwhitcomb)
#	    Tweak an error message, and add another.
#	23-Aug-2021 (rlwhitcomb)
#	    Add a "resultGUI" text with a nice arrow symbol.
#	24-Aug-2021 (rlwhitcomb)
#	    New error for converting int to codepoint.
#	25-Aug-2021 (rlwhitcomb)
#	    New error message for attempted assignments to the global arguments.
#	01-Sep-2021 (rlwhitcomb)
#	    Error for bad input charset.
#	15-Sep-2021 (rlwhitcomb)
#	    Add more color tags to error messages.
#	26-Sep-2021 (rlwhitcomb)
#	    Remove quotes around colored phrases.
#	06-Oct-2021 (rlwhitcomb)
#	    Errors from Scope. Remove now unneeded messages.
#	08-Oct-2021 (rlwhitcomb)
#	    Undefined function error.
#	19-Oct-2021 (rlwhitcomb)
#	    Errors for "replace". Errors for "splice".
#	28-Oct-2021 (rlwhitcomb)
#	    New error for predefined value assignment.
#	07-Nov-2021 (rlwhitcomb)
#	    #69: New error for varargs.
#	11-Nov-2021 (rlwhitcomb)
#	    #81: New option for quoting strings.
#	28-Nov-2021 (rlwhitcomb)
#	    #111: New color attributes for values that should be quoted
#	    when not colored.
#	03-Dec-2021 (rlwhitcomb)
#	    #116: New format for timing message.
#	28-Dec-2021 (rlwhitcomb)
#	    #128: Generalize "fill" errors for "pad" also.
#	31-Dec-2021 (rlwhitcomb)
#	    #180: New error for scale value in formats.
#	01-Jan-2022 (rlwhitcomb)
#	    #175: New format for decimal message to display precision.
#	    #177: Library version mismatch error.
#	04-Jan-2022 (rlwhitcomb)
#	    #194: New comment to explain library versions.
#	09-Jan-2022 (rlwhitcomb)
#	    #153: New error from command-line declaration.
#	21-Jan-2022 (rlwhitcomb)
#	    #135: New defining message and new error for "const" declarations.
#	24-Jan-2022 (rlwhitcomb)
#	    #223: New ":predefined" command messages.
#

#
# Note: <v> is VALUE_COLOR
#	<u> is VALUE_COLOR or left quote
#       <a> is ARROW_COLOR
#       <x> is EXPR_COLOR
#	<y> is EXPR_COLOR or left quote
#       <e> is ERROR_COLOR
#       <r> is RESET
#       <>  resets to previous color or right quote
#

#
# From Calc.java
#
resultOnly	= <v>%1$s<r>
result		= <x>%1$s<a> -> <v>%2$s<r>
resultGUI	= <x>%1$s<a> \u21e8 <v>%2$s<r>
action		= <x>%1$s<r>
message		= <a>%1$s<r>
errorLine	= <e>%1$s<r> at line %2$d.
error		= <e>%1$s<r>
errorPeriod	= <e>%1$s.<r>
expectNotOption	= <e>Expecting <y>%1$s<> value, not another option.<r>
expectValue	= <e>Expecting <y>%1$s<> value.<r>
noOptionValue	= <e>Value for <y>%1$s<> option was not given.<r>
unknownOption	= Unknown option <u>%1$s<>; ignoring.
inOutError	= <e>I/O Error: %1$s<>
argError	= Error: %1$s
charsetError	= <e>Problem with character set <y>%1$s<>: %2$s<r>
declError	= <e>Improper syntax for variable declaration: <y>%1$s<><r>
timing		= Parse time %1$11.9f secs. Execution time %2$11.9f secs. Total elapsed time %3$11.9f seconds.
syntaxError	= Syntax error at position %1$d: %2$s
errorNoAlt	= Syntax error at position %1$d: no viable alternative at input <y>%2$s<>

libVersionMismatch	= Library <y>%1$s<> is not compatible with the current program version.
libVersionDescription	= //** The versions above must conform to the latest values in "version.properties" and "build.properties"

#
# From CalcObjectVisitor
#
precUnlimited	= Precision is now <u>UNLIMITED<>.
precDigits	= Precision is now <u>%1$d<> digits.
trigMode	= Trig mode is now <u>%1$s<>.
unitsBinary	= Units in <u>binary<>.
unitsTen	= Units in <u>SI (base ten)<> form.
unitsMixed	= Units in <u>mixed<> form.
varsAllCleared	= All variables cleared.
varOneVariable	= "Variable "
varVariables	= "Variables "
varCleared	= %1$s cleared.
varAnd		= "and "
timingMode	= Timing mode set to <u>%1$s<>.
debugMode	= Debug mode set to <u>%1$s<>.
rationalMode	= Calculation mode set to <u>%1$s<>.
separatorMode	= Separator display set to <u>%1$s<>.
ignoreCaseMode  = Ignoring case is now <u>%1$s<>.
quoteStringsMode= Quoting result strings is now <u>%1$s<>.
definingFunc	= <r>Defining function <y>%1$s<><r> = <v>%2$s<r>
definingConst	= <r>Defining constant <y>%1$s<><r> = <v>%2$s<r>
variables	= Variables
varUnder1	= ---------
varUnder2	= =========
predefined	= Predefined
preUnder1	= ----------
preUnder2	= ==========
predefVariable	= <a>Varies, currently:<> %1$s
# These two should (probably) not be translated
rational	= RATIONAL
decimal		= DECIMAL(%1$s)
unlimited	= UNLIMITED

precNotInteger		= Decimal precision of <u>%1$s<> must be a 32-bit integer value
precOutOfRange		= Decimal precision of <u>%1$d<> is out of range
charOutOfRange		= Integer value of <u>0x%1$08X<> out of range of Unicode characters (0..0x10FFFF)
ioError			= I/O Error: %1$s
noConvertInteger	= Unable to convert value of <y>%1$s<> to an integer
noConvertObjArr		= Cannot convert object or array to <y>%1$c<> format
noScaleFormat		= Format with scale (<u>.%1$d<>) value not supported in <y>%2$c<> format
noDupLocalVar		= Duplicate local variable name <y>%1$s<> not allowed
localVarNoAssign	= The value of the local variable <y>%1$s<> cannot be changed directly
globalArgNoAssign	= The value of the global argument <y>%1$s<> cannot be changed directly
mustBeObject		= Source variable type <y>%1$s<> must be an object
mustBeArray		= Source variable type <y>%1$s<> must be an array
undefined		= Variable <y>%1$s<> is not defined
infLoopStepZero		= Infinite loop: step value is zero
invalidConstruct	= Invalid <y>$<> construct
invalidConst2		= Invalid <y>${...}<> construct
modeError		= Mode option <y>%1$s<> not recognized
replaceOptionError	= Replace option <y>%1$s<> not recognized
illegalFormat		= Unrecognized format <y>%1$s<>
targetWrongType		= Target of a <y>%1$s<> must be an array or string
oneCharInt		= %1$s value for a string must be one character or an integer \u2264 65535
undefinedFunction	= Cannot call undefined function <y>%1$s<>

intro.help1	= "  Enter an expression (or multiple expressions separated by <u>;<>)."
intro.help2	= "  Use <u>help<> or <u>?<> for a list of supported functions."
intro.help3	= "  Enter <u>quit<> or <u>exit<> to end."
intro.help4	= "  Enter <u>gui<> to enter GUI mode."
intro.help5	= ""

#
# From CalcUtil
#
valueNotNull		= Value of <y>%1$s<> must not be null
noConvertDecimal	= Unable to convert value of <y>%1$s<> type to decimal number
noConvertFraction	= Unable to convert value of <y>%1$s<> type to fraction
unknownType		= Unknown value type: <y>%1$s<>

#
# From LValueContext
#
localVarNotAvail	= Local variable <y>%1$s<> is not available
nonObjectValue		= Variable <y>%1$s<> already has a non-object value
nonArrayValue		= Variable <y>%1$s<> already has a non-array value
callNotAFunction	= Cannot make a function call on the non-function value <y>%1$s<>
indexNegative		= Index value of <u>%1$d<> cannot be negative
unknownVarCtx		= ERROR: unknown var context subclass: <y>%1$s<>
badAssign		= Assignment to <y>%1$s<> without name or index
tooManyForOneValue	= Too many actual values (%1$d) passed for only one parameter
tooManyForValues	= Too many actual values (%1$d) passed for only %2$d parameters
noChangePredefined	= Cannot change predefined value <y>%1$s%2$s<>
noChangeConstant	= Cannot change constant value <y>%1$s%2$s<>

#
# From UnknownOpException
#
unknownOp	= Unknown operator <y>%1$s<>

#
# From Scope
#
indexOutOfBounds	= Index value of <u>%1$d<> is out of bounds

#
# From FunctionDeclaration
#
varargsLast		= Variable argument declaration must be last in the parameter list

