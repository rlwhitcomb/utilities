<?xml version="1.0" encoding="UTF-8"?>

<!-- ==========================================================================

	The MIT License (MIT)

	Copyright (c) 2020 Roger L. Whitcomb.

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.

	"Ant" build file for the utility code.

	History:
	    18-Sep-2020 (rlwhitcomb)
		Add "History" starting from now; reformat and clean up target
		descriptions. Added "matches" directory today also.
	    22-Sep-2020 (rlwhitcomb)
		Add DumpManifest and MD5 to the .jar file for convenience.
	    02-Oct-2020 (rlwhitcomb)
		Add OS also to everywhere.
	    02-Oct-2020 (rlwhitcomb)
		Add Lists to the .jar file.
	    14-Oct-2020 (rlwhitcomb)
		Add the .../compare directory.
	    06-Nov-2020 (rlwhitcomb)
		Add the external and Ant jars to the "javadoc" classpath.
	    06-Nov-2020 (rlwhitcomb)
		Add the new tests of Options to the "test" target.
	    09-Nov-2020 (rlwhitcomb)
		New test of InitializationTask.
	    13-Nov-2020 (rlwhitcomb)
		Add DynamicArray and DynArrayTest.
	    13-Nov-2020 (rlwhitcomb)
		Make "all" do everything from "clean" to "test".
	    13-Nov-2020 (rlwhitcomb)
		Add MatchesTest to the "test" target.
	    13-Nov-2020 (rlwhitcomb)
		Add "diff_match_patch" code to the mix.
	    13-Nov-2020 (rlwhitcomb)
		Add GZip and GUnzip classes.
	    18-Nov-2020 (rlwhitcomb)
		Add FixPath.
	    24-Nov-2020 (rlwhitcomb)
		Copy java wrapper files along with .jar file.
	    03-Dec-2020 (rlwhitcomb)
		New tests of NumericUtil methods.
	    04-Dec-2020 (rlwhitcomb)
		Add "calc" directory, wrappers, and Antlr build.
	    05-Dec-2020 (rlwhitcomb)
		Copy external jars to UTILITIES_HOME.
	    07-Dec-2020 (rlwhitcomb)
		Add Javadoc window title. Only copy the antlr runtime .jar file
		into the install directory.
	    09-Dec-2020 (rlwhitcomb)
		Add message while generating grammar.
	    11-Dec-2020 (rlwhitcomb)
		Java 14 doesn't support -html4 or -frames options for Javadoc
		Don't regenerate grammar if it is up-to-date already.
	    11-Dec-2020 (rlwhitcomb)
		Add extra files for Calc GUI to the .jar file.
	    11-Dec-2020 (rlwhitcomb)
		Add "build.properties" to the .jar file.
	    16-Dec-2020 (rlwhitcomb)
		Add "Sleep".
	    19-Dec-2020 (rlwhitcomb)
		Add debug setting for javac. Add the Calc script to "test".
	    21-Dec-2020 (rlwhitcomb)
		Use "version.properties" instead of "build.properties" for
		individual title/version information.
	    21-Dec-2020 (rlwhitcomb)
		Fix Javadoc error when building on Java 14 pointing to Java 8 API.
	    21-Dec-2020 (rlwhitcomb)
		Rename the MD5 wrappers to lowercase.

     ========================================================================== -->

<project name="java-utilities" default="all" basedir="."
    xmlns:if="ant:if"
    xmlns:unless="ant:unless"
>
	<property environment="env"/>
	<property file="build.properties"/>
	<buildnumber/>
	<condition property="new.java.version" value="true" else="false" >
		<javaversion atleast="9"/>
	</condition>
	<condition property="html4.output" value="true" else="false">
		<and>
			<javaversion atleast="9"/>
			<not><javaversion atleast="14"/></not>
		</and>
	</condition>
	<patternset id="wrapper-files">
		<include name="_find_and_run_class"/>
		<include name="calc"/>
		<include name="cat"/>
		<include name="cmp"/>
		<include name="fixpath"/>
		<include name="gunz"/>
		<include name="gz"/>
		<include name="lists"/>
		<include name="manifest"/>
		<include name="matches"/>
		<include name="md5"/>
		<include name="os"/>
		<include name="sleep"/>
		<include name="tre"/>
		<include name="which"/>
	</patternset>


	<taskdef name="preproc" classname="info.rlwhitcomb.preproc.JavaPreProc" classpath="${ant.tasks.jar}"/>

	<macrodef name="generate-text-resources">
		<attribute name="dir"/>

		<sequential>
			<apply executable="native2ascii" dir="@{dir}" dest="@{dir}"
				failonerror="true" unless:true="${new.java.version}">
				<arg value="-encoding" />
				<arg value="utf8" />
				<srcfile/>
				<targetfile/>
				<fileset dir="@{dir}" includes="resources*.utf8"/>
				<globmapper from="*.utf8" to="*.properties"/>
			</apply>
			<copy todir="@{dir}" if:true="${new.java.version}">
				<fileset dir="@{dir}" includes="resources*.utf8"/>
				<globmapper from="*.utf8" to="*.properties"/>
			</copy>
		</sequential>
	</macrodef>

	<target name="preproc" description="Preprocesses necessary files.">
		<preproc file="info/rlwhitcomb/util/Environment.javapp" outputExt=".java"
			nologo="true" verbose="true" format="UTF-8"
			define="PRODUCT_NAME=${product.name},APP_VERSION=${build.version},APP_BUILD=${build.number},IS_DEBUG_BUILD=false" />
		<parallel>
			<generate-text-resources dir="info/rlwhitcomb/cat" />
			<generate-text-resources dir="info/rlwhitcomb/compare" />
			<generate-text-resources dir="info/rlwhitcomb/csv" />
			<generate-text-resources dir="info/rlwhitcomb/matches" />
			<generate-text-resources dir="info/rlwhitcomb/tree" />
			<generate-text-resources dir="info/rlwhitcomb/util" />
		</parallel>
	</target>

	<target name="check-grammar-uptodate">
		<condition property="grammar.uptodate" value="true" else="false">
			<uptodate srcfile="info/rlwhitcomb/calc/Calc.g4" targetfile="info/rlwhitcomb/calc/CalcParser.java"/>
		</condition>
	</target>

	<target name="compile" depends="preproc,check-grammar-uptodate" description="Compiles the java source.">
		<echo message="Generating Calc parser" unless:true="${grammar.uptodate}"/>
		<java jar="external-jars/antlr-4.9-complete.jar" fork="true" unless:true="${grammar.uptodate}">
			<arg value="info/rlwhitcomb/calc/Calc.g4"/>
			<arg value="-visitor"/>
			<arg value="-no-listener"/>
			<arg line="-package info.rlwhitcomb.calc"/>
		</java>
		<javac includeAntRuntime="false" createMissingPackageInfoClass="false" encoding="utf-8" debug="${javac.debug}">
			<compilerarg line="${compiler.args}"/>
			<src path="."/>
			<src path="net/iharder/b64"/>
			<src path="name/fraser/neil/plaintext"/>
			<src path="info/rlwhitcomb/annotations"/>
			<src path="info/rlwhitcomb/calc"/>
			<src path="info/rlwhitcomb/cat"/>
			<src path="info/rlwhitcomb/compare"/>
			<src path="info/rlwhitcomb/csv"/>
			<src path="info/rlwhitcomb/jarfile"/>
			<src path="info/rlwhitcomb/matches"/>
			<src path="info/rlwhitcomb/tree"/>
			<src path="info/rlwhitcomb/util"/>
			<exclude name="**/package-info.java"/>
			<exclude name="**/preproc/*"/>
			<exclude name="**/ant/*"/>
			<classpath>
				<pathelement path="."/>
				<fileset dir="external-jars" includes="*.jar"/>
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile" description="Jar up the compiled class files (into ${dest.jar}).">
		<jar basedir="." destfile="${dest.jar}">
			<include name="DumpManifest*.class"/>
			<include name="Lists*.class"/>
			<include name="MD5*.class"/>
			<include name="OS*.class"/>
			<include name="GZip*.class"/>
			<include name="GUnzip*.class"/>
			<include name="FixPath*.class"/>
			<include name="Sleep*.class"/>
			<include name="net/iharder/b64/*.class"/>
			<include name="name/fraser/neil/plaintext/*.class"/>
			<include name="info/rlwhitcomb/annotations/*.class"/>
			<include name="info/rlwhitcomb/calc/*.class"/>
			<include name="info/rlwhitcomb/calc/*.bxml"/>
			<include name="info/rlwhitcomb/cat/*.class"/>
			<include name="info/rlwhitcomb/compare/*.class"/>
			<include name="info/rlwhitcomb/csv/*.class"/>
			<include name="info/rlwhitcomb/jarfile/*.class"/>
			<include name="info/rlwhitcomb/matches/*.class"/>
			<include name="info/rlwhitcomb/tree/*.class"/>
			<include name="info/rlwhitcomb/util/*.class"/>
			<include name="info/rlwhitcomb/**/*.properties"/>
			<include name="images/*.*"/>
			<include name="Terra*.json"/>
			<include name="version.properties"/>
		</jar>
	</target>

	<target name="doc" depends="compile" description="Builds the Javadoc for the entire project.">
		<javadoc destdir="doc" access="private" encoding="utf-8" windowtitle="Utilities">
			<arg value="-html4" if:true="${html4.output}"/>
			<arg value="--frames" if:true="${html4.output}"/>
			<arg line="--release 8" if:true="${new.java.version}"/>
			<link href="https://docs.oracle.com/javase/8/docs/api/"/>
			<packageset dir=".">
				<include name="net/iharder/b64"/>
				<include name="name/fraser/neil/plaintext"/>
				<include name="info/rlwhitcomb/**"/>
			</packageset>
			<fileset dir=".">
				<include name="*.java" />
			</fileset>
			<classpath>
				<pathelement path="."/>
				<fileset dir="external-jars" includes="*.jar"/>
				<fileset dir="${ant.library.dir}" includes="*.jar"/>
			</classpath>
		</javadoc>
	</target>

	<target name="test" depends="compile" description="Run extant unit tests.">
		<java classname="TestSQLFormatter"/>
		<java classname="info.rlwhitcomb.util.Options"/>
		<java classname="InitTaskTest"/>
		<java classname="DynArrayTest"/>
		<java classname="info.rlwhitcomb.matches.MatchesTest"/>
		<java classname="TestNumericUtil"/>
		<java classname="info.rlwhitcomb.calc.Calc">
			<arg value="e1"/>
		</java>
	</target>

	<target name="clean" description="Cleans all generated files.">
		<delete>
			<fileset dir="." includes="${dest.jar}"/>
			<fileset dir="." includes="*.class"/>
			<fileset dir="net/iharder/b64" includes="*.class"/>
			<fileset dir="name/fraser/neil/plaintext" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/annotations" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/calc" includes="*.class,*.interp,*.tokens,CalcParser.java,CalcVisitor.java,CalcLexer.java,CalcBaseVisitor.java"/>
			<fileset dir="info/rlwhitcomb/cat" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/compare" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/csv" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/jarfile" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/matches" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/tree" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/util" includes="*.class"/>
			<!-- Clean out the preprocessed files -->
			<fileset dir="." includes="**/*">
				<present targetdir=".">
					<mapper type="glob" from="*.java" to="*.javapp"/>
				</present>
			</fileset>
			<fileset dir="." includes="**/*">
				<present targetdir=".">
					<mapper type="glob" from="*.properties" to="*.utf8"/>
				</present>
			</fileset>
		</delete>
		<delete dir="doc"/>
	</target>

	<target name="all" depends="clean,compile,jar,doc,test" description="Does clean, compile, jar, doc, and test."/>

	<condition property="utilities.available" value="true" else="false">
		<isset property="env.UTILITIES_HOME"/>
	</condition>
	<echo message="UTILITIES_HOME=${env.UTILITIES_HOME}" if:true="${utilities.available}"/>

	<target name="install" depends="all" description="Build and install the utilities in a local utilities directory.">
		<copy file="${dest.jar}" todir="${env.UTILITIES_HOME}" if:true="${utilities.available}"/>
		<copy todir="${env.UTILITIES_HOME}" if:true="${utilities.available}">
			<fileset dir=".">
				<patternset refid="wrapper-files"/>
			</fileset>
			<fileset dir="./external-jars">
				<include name="*.jar"/>
				<exclude name="antlr-*-complete.jar"/>
			</fileset>
		</copy>
		<copy todir="${env.UTILITIES_HOME}" if:true="${utilities.available}">
			<fileset dir=".">
				<patternset refid="wrapper-files"/>
			</fileset>
			<globmapper from="*" to="*.bat"/>
		</copy>
		<chmod dir="${env.UTILITIES_HOME}" perm="+x" if:true="${utilities.available}">
			<patternset refid="wrapper-files"/>
		</chmod>
		<echo message="Variable UTILITIES_HOME is not set in the environment!" unless:true="${utilities.available}"/>
	</target>
</project>


