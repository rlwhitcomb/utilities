<?xml version="1.0" encoding="UTF-8"?>

<!-- ==========================================================================

	The MIT License (MIT)

	Copyright (c) 2020 Roger L. Whitcomb.

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.

	"Ant" build file for the utility code.

     ========================================================================== -->

<project name="java-utilities" default="all" basedir="."
    xmlns:if="ant:if"
    xmlns:unless="ant:unless"
>
	<property environment="env"/>
	<property file="build.properties"/>
	<buildnumber/>
        <condition property="new.java.version" value="true" else="false" >
                <javaversion atleast="9"/>
        </condition>


        <taskdef name="preproc" classname="info.rlwhitcomb.preproc.JavaPreProc" classpath="${ant.tasks.jar}"/>

        <macrodef name="generate-text-resources">
                <attribute name="dir"/>

                <sequential>
                        <apply executable="native2ascii" dir="@{dir}" dest="@{dir}" failonerror="true" unless:true="${new.java.version}">
                                <arg value="-encoding" />
                                <arg value="utf8" />
                                <srcfile/>
                                <targetfile/>
                                <fileset dir="@{dir}" includes="resources*.utf8"/>
                                <globmapper from="*.utf8" to="*.properties"/>
                        </apply>
                        <copy todir="@{dir}" if:true="${new.java.version}">
                                <fileset dir="@{dir}" includes="resources*.utf8"/>
                                <globmapper from="*.utf8" to="*.properties"/>
                        </copy>
                </sequential>
        </macrodef>

	<target name="preproc" description="Preprocesses necessary files">
                <preproc file="info/rlwhitcomb/util/Environment.javapp" outputExt=".java" nologo="true" verbose="true" format="UTF-8"
                        define="PRODUCT_NAME=${product.name},APP_VERSION=${build.version},APP_BUILD=${build.number},IS_DEBUG_BUILD=false" />
                <parallel>
                        <generate-text-resources dir="info/rlwhitcomb/csv" />
                        <generate-text-resources dir="info/rlwhitcomb/util" />
                </parallel>
	</target>

	<target name="compile" depends="preproc" description="Compiles the java source">
		<javac includeAntRuntime="false" createMissingPackageInfoClass="false" encoding="utf-8">
			<compilerarg line="${compiler.args}"/>
			<src path="."/>
			<src path="net/iharder/b64"/>
			<src path="info/rlwhitcomb/annotations"/>
			<src path="info/rlwhitcomb/cat"/>
			<src path="info/rlwhitcomb/csv"/>
			<src path="info/rlwhitcomb/jarfile"/>
			<src path="info/rlwhitcomb/tree"/>
			<src path="info/rlwhitcomb/util"/>
			<exclude name="**/package-info.java"/>
			<exclude name="**/preproc/*"/>
			<exclude name="**/ant/*"/>
			<classpath>
				<pathelement path="."/>
				<fileset dir="external-jars" includes="*.jar"/>
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile" description="jar up the compiled class files">
		<jar basedir="." destfile="${dest.jar}">
			<include name="net/iharder/b64/*.class"/>
			<include name="info/rlwhitcomb/annotations/*.class"/>
			<include name="info/rlwhitcomb/cat/*.class"/>
			<include name="info/rlwhitcomb/csv/*.class"/>
			<include name="info/rlwhitcomb/jarfile/*.class"/>
			<include name="info/rlwhitcomb/tree/*.class"/>
			<include name="info/rlwhitcomb/util/*.class"/>
			<include name="info/rlwhitcomb/**/*.properties"/>
		</jar>
	</target>

	<target name="doc" depends="compile" description="Builds Javadoc">
		<javadoc destdir="doc" access="private" encoding="utf-8">
			<arg value="-html4" if:true="${new.java.version}"/>
			<arg value="--frames" if:true="${new.java.version}"/>
			<link href="https://docs.oracle.com/javase/8/docs/api/"/>
			<packageset dir=".">
				<include name="net/iharder/b64"/>
				<include name="info/rlwhitcomb/**"/>
			</packageset>
                       <fileset dir=".">
                                <include name="*.java" />
                        </fileset>
		</javadoc>
	</target>

	<target name="all" depends="compile,jar" description="Builds and jars everything"/>

	<target name="clean" description="cleans all generated files">
		<delete>
			<fileset dir="." includes="${dest.jar}"/>
			<fileset dir="." includes="*.class"/>
			<fileset dir="net/iharder/b64" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/annotations" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/cat" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/csv" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/jarfile" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/tree" includes="*.class"/>
			<fileset dir="info/rlwhitcomb/util" includes="*.class"/>
                        <!-- Clean out the preprocessed files -->
                        <fileset dir="." includes="**/*">
                                <present targetdir=".">
                                        <mapper type="glob" from="*.java" to="*.javapp"/>
                                </present>
                        </fileset>
                        <fileset dir="." includes="**/*">
                                <present targetdir=".">
                                        <mapper type="glob" from="*.properties" to="*.utf8"/>
                                </present>
                        </fileset>
		</delete>
		<delete dir="doc"/>
	</target>
</project>


