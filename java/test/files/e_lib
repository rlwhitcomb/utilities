#
# Testing of some of the Calc standard library functions
#
:clear
:separators off
:quiet on { :open 'test/files/library' }

excel_date(d'2021/10/8')
excel_date_1904(D'12/7/1941')
rad_to_deg(pi/4)
deg_to_rad(135)
dow_name(D'10/13/1957')
moy_name(D'9/11/2001')
long_date(D'11/11/1918')
flat_map([[[1,2],[3,4]],[[5,6],[7,8]],[[9,10],[11,12]]])
sort flat_map( [[3,9], [4, 7], [1, 2], [10, 8]] )
is_perfect(28)
is_perfect(99)
quad(3,-4,-9)
quad(1,0,-25)
quad(1, -1, -1)[0]
quad(1, 0, 4)
quad_exp(1, 0, 4, (0,2) )
quad_exp(1, 0, 4, (0,-2) )

zeta_2n(2)

win_pct(25,75)
win_pct(662,174,2)

mean_stddev([1, 2, 3, 4, 5, 6, 7, 8])

:silencedirectives on {
  :quotestrings off {
help_mort
monthly(244000, 3.25, 30)
PMT2(350000, 0.3, 180)
  }
}

s1 = eval stack
isempty(s1)
peek(s1)
push(s1, 'abc')
isempty(s1)
push(s1, 'def')
peek(s1)
s1
pop(s1)
peek(s1)
pop(s1)
isempty(s1)
peek(s1)
pop(s1)
isempty(s1)
 
FtoC(32)
FtoC(212)
CtoF(0)
CtoF(100)
CtoF(23)
FtoC(98.6)
CtoF(40)
FtoC(-40)
CtoF(-40)

to_excel_col(1)
to_excel_col(2)
to_excel_col(25)
to_excel_col(26)
to_excel_col(27)
to_excel_col(32)
to_excel_col(52)
to_excel_col(53)
to_excel_col(256)
to_excel_col(702)
to_excel_col(16384)

from_excel_col('A')
from_excel_col('Z')
from_excel_col('AA')
from_excel_col('AF')
from_excel_col('ZZ')
from_excel_col('XFD')

:echo 'Checking all columns from 1 - 16384 ...'
:quiet on {
_tests = 0
_mistakes = 0
loop over 16384 { _tests++; if from_excel_col(to_excel_col(__)) != __ { _mistakes++ } }
}
:echo `Number of tests = $_tests, mistakes = $_mistakes`

# Depending on line endings, this result could be different on Windows vs. others
# So, read the file, do the substitution and write back out to test
#hash('test/data/Declaration.txt',,true)
:quiet on {
  hashfile = read('test/data/Declaration.txt')
  hashfile = replace(hashfile, '\r?\n', '\n', all)
  write(hashfile, 'decl.txt')
}
hash('decl.txt',,true)
hashstring('Four score and seven years ago')

#
# Date format checks
#
dt1 = d'2021-8-5'
dateformat(dt1, 'MMM d, yyyy')
dateformat(dt1, 'mm/dd/yyyy')
dateformat(dt1, 'd M yyyy')
dateformat(dt1, 'yyyy-dd-mm')
dateformat(dt1)
dateformat(dt1, 'm/d/yy')
dateformat(dt1, 'mm/dd/yy')

#
# Surrogate pair conversions
#
cp = 0x1f603
surr_pair_to_cp(0xd83d, 0xde03) @c
cp_to_high_surr(cp) @x
cp_to_low_surr(cp) @x

#
# Tangent numbers
#
:decimal 300
:resultsonly on {
loop k over 0..20 `Tn($k) = ${Tn(k)}` @q
}
:default

:separators pop
:clear

