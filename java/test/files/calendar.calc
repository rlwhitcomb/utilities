/*
 * Simple script to generate a calendar for the given month / year.
 *
 * Inputs:
 *   $0 = month (should be 01 .. 12)
 *   $1 = year (either YY or YYYY)
 *   $2 = optional number of months (default 1)
 * Output:
 *   A calendar such as this:
 *
 *          August 2024
 *   Su  Mo  Tu  We  Th  Fr  Sa
 *                    1   2   3
 *    4   5   6   7   8   9  10
 *   11  12  13  14  15  16  17
 *   18  19  20  21  22  23  24
 *   25  26  27  28  29  30  31
 */
$quiet on
$assert defined(moy_name, dow_name, dateformat), 'Requires "library.calc"; rerun without the "-nolib" option!'

const HEADER = 'Su  Mo  Tu  We  Th  Fr  Sa'
const WIDTH = length(HEADER)

define adjust_year(y) = {
   const yr = ~~y
   yr <= 99 ? adjust_short_year(yr) : yr
}

const TDAY = today
var month, year, number_of_months = 1
case $# of {
   0: { month = moy(TDAY)
        year  = yod(TDAY) },
   1: { month = ~~$0
        year  = yod(TDAY) },
   2: { month = ~~$0
        year = adjust_year($1) },
default: { month = ~~$0
           year = adjust_year($1)
           number_of_months = ~~$2 }
}
$assert (month >= 1 && month <= 12), 'First parameter should be a month number from 1 .. 12.'
$assert (year >= 1000 && year <= 9999), 'Second argument should be a two- or four-digit year.'
$assert (number_of_months >= 1), 'Third argument should be the number of months (>= 1).'

loop within number_of_months {
   var start_of_month = todate(month, 1, year)
   var days_in_month  = (month == 12 ? todate(1, 1, year + 1) : todate(month + 1, 1, year)) - start_of_month
   var end_of_month   = start_of_month + days_in_month

   var w = dateformat(start_of_month, 'MMM yyyy')
   pad(w, WIDTH)

   display
   display GREEN_BRIGHT + w + END
   display CYAN_UNDER + HEADER + END

   const start_date = start_of_month - dow(start_of_month)
   var current_date = start_date

 weeks:
   loop week over 6 {
      var current_week = ''
      if current_date >= end_of_month leave weeks:
      loop day within 7 {
         var this_day = ''
         if current_date >= start_of_month && current_date < end_of_month
            this_day = @@dom(current_date)
         if current_date === today {
            lpad(this_day, 2)
            current_week += '  ' + CYAN_BKGND + this_day + WHITE
         } else {
            lpad(this_day, 4)
            current_week += this_day
         }
         current_date++
      }
      display current_week[2:]
   }

   if ++month > 12 {
      month = 1
      year++
   }
}

display

