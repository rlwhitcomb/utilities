/*
 * Rational approximations of e using continued fractions.
 * Taken from: https://www.johndcook.com/blog/2013/01/30/rational-approximations-to-e/
 *
 * Python code:
 * from math import e
 *
 * e_frac = [2,1,2,1,1,4,1,1,6,1,1,8]
 *
 * def result(n, d, exact):
 *     print(n, d, n/d, n/d - exact)
 *
 * def approx(a, exact):
 *     # initialize the recurrence
 *     n0 = a[0]
 *     d0 = 1
 *     n1 = a[0]*a[1] + 1
 *     d1 = a[1]
 *
 *     result(n0, d0, exact)
 *     result(n1, d1, exact)
 *
 *     for x in a[2:]:
 *         n = x*n1 + n0 # numerator
 *         d = x*d1 + d0 # denominator
 *         result(n, d, exact)
 *         n1, n0 = n, n1
 *         d1, d0 = d, d1
 *
 * approx(e_frac, e)
 */

$quiet on
$separators off
$decimal 100

e_frac = [2,1,2,1,1,4,1,1,6,1,1,8,1,1,10,1,1,12]
pi_frac = [3,7,15,1,292,1,1,1,2,1,3,1,14,2,1,1,2,2,2,2,1,84,2,1,1,15,3,13,1,4,2,6,6,99,1,2,2,6,3,5,1,1,6,8,1,7,1,2,3,7,1,2,1,1,12,1,1,1,3,1,1,8,1,1,2,1,6,1,1,5,2,2,3,1,2,4,4,16,1,161,45,1,22,1,2,2,1,4,1,2,24,1,2,1,3,1,2,1]

def result(n, d, exact) = {
   print n, '/', d, '=', n/d, ', diff =', ((n/d) - exact)
   n / d - exact
}

def approx(a, exact) = {
display `approx: $a, exact: $exact`

    # initialize the recurrence
    n0 = a[0]
    d0 = 1
    n1 = a[0]*a[1] + 1
    d1 = a[1]

    result(n0, d0, exact)
    result(n1, d1, exact)

    loop x over a[2:] {
        n = x*n1 + n0 # numerator
        d = x*d1 + d0 # denominator
        n1, n0 = n, n1
        d1, d0 = d, d1
        result(n, d, exact)
    }
}

/*
 * Compute the continued fraction representation of a rational fraction
 */
define cf(num, den) = {
   var a = num, b = den
   var f = []
   if a < b {
      f += 0
      a, b = b, a
   }
   while {
      f += a \ b
      const r = a % b
      if r == 0 leave f
      a, b = b, r
   }
}

/*
 * Now try for a decimal value.
 */
define cf2(x) = {
   if typeof(x) === "fraction" {
      cf(x[0], x[1])
   } else {
      const x1 = ~~x
      const s = scale(x1)
      cf(s * x1, s)
   }
}

approx(e_frac, e)
approx(pi_frac, pi)

approx([2, 1, 7], 2.875)
approx([3, 1, 7], 3.875)
approx([3, 1, 9], 3.9)
approx([1, 2, 3, 4, 5], 225/157)

// All examples taken from https://pi.math.cornell.edu/~gautam/ContinuedFractions.pdf

$quiet pop

cf(1, 3)
cf(31, 8)
cf(43, 19)
cf(19, 43)
cf(3, 7)
cf(7, 3)
cf(225, 157)
cf(7, 38)
cf(5, 27)
cf(17, 12)
cf(21, 8)
cf(2875, 1000)

const C1 = 3.875
const C2 = frac(1, 3)
c1 = cf2(C1)
approx(c1, C1)
c2 = cf2(C2)
approx(c2, C2)

