:quiet on
/*
 * Convert one of our dates to an Excel date serial number
 * where 1/1/1900 is considered day 1 (BUT 1900 is also considered
 * [erroneously] as a leap year)
 * From here: https://docs.microsoft.com/en-us/office/troubleshoot/excel/determine-a-leap-year
 * "However, in order to be compatible with other programs, Microsoft Excel treats the year 1900 as a leap year."
 *
 * @param date The input date value
 * @return     The Excel date serial number, where 1/1/1900 is 1
 */
def excel_date = { date < D'3/1/1900' ? date - D'1/1/1900' + 1 : date - D'1/1/1900' + 2 }

/*
 * Convert one of our dates to an Excel date serial number using the 1904 system
 * where 1/1/1904 is considered day 0
 *
 * @param date The input date value
 * @return     The Excel 1904-system date serial number, where 1/1/1904 is 0
 */
def excel_date_1904 = { date - D'1/1/1904' }

/*
 * Convert radians to degrees: 2*pi = 360, so radians / pi * 180 = degrees
 *
 * @param rad The input radians value
 * @return    Computed degrees
 */
def rad_to_deg = { rad / pi * 180 }

/*
 * Convert degrees to radians: 2*pi = 360, so degrees / 180 * pi = radians
 *
 * @param deg The input degrees value
 * @return    Computed radians
 */
def deg_to_rad = { deg / 180 * pi }

/*
 * Get the day of week name for a given date.
 *
 * @param date The input date value.
 * @return     The day name ("Sunday" .. "Saturday").
 */
_day_names_  = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ]
def dow_name = { _day_names_ [ dow(date) ] }

/*
 * Get the month name for a given date.
 *
 * @param date The input date value.
 * @return     The month name ("January" .. "December").
 */
_month_names_ = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
def moy_name = { _month_names_ [ moy date - 1 ] }

/*
 * Get the long form of a date.
 * From D'2/1/1980' -> Friday, February 1, 1980
 *
 * @param date The input date value.
 * @return     The long string representation of the date.
 */
def long_date = { `${dow_name}, ${moy_name} ${dom(date)}, ${yod(date)}` }

/*
 * Compute the flat map of an array.
 *
 * @param arr The input array.
 * @return    The flat map of that array.
 */
def flat_map = { eval `[${join arr, ','}]` }

:quiet pop
