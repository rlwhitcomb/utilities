// Values can be checked here: https://owlcalculator.com/combinatorics/stirling-numbers-calculator

// Stirling numbers of the first kind
define S1(n, k, signed=true) = {
    $assert n >= 0 && k >= 0, 'n and k cannot be negative'
    define impl(n, k) = {
        if n == 0 && k == 0 leave 1
        if k == 0 || k > n leave 0
        impl(n - 1, k - 1) + ((n - 1) * impl(n - 1, k))
    }
    const term = impl(n, k)
    signed ? (-1)**(n-k) * term : term
}

// Stirling number of the second kind
define S2(n, k) = {
    $assert n >= 0 && k >= 0, 'n and k cannot be negative'
    if n == 0 && k == 0 leave 1
    if k == 0 || k > n leave 0
    k * S2(n - 1, k) + S2(n - 1, k - 1)
}

$quiet on {
$library 'boxdraw'

const START = 0
const N = !!$0 ? ~~$0 : 12
const SIGNED = !!$1
const WIDTH = 13

const UNDER = __construct_line(LT_VT_LT_HZ, LT_HZ, LT_HZ, WIDTH)
const BLANK = __construct_line(' ', ' ', ' ', WIDTH - 1) + LT_VT

const FORMAT = formatstring('%%,%dd', WIDTH - 1)

var header = 'n/k' + LT_VT
var under = dash_line(3, LT_HZ)

loop k over START..N {
    header += formatstring(FORMAT, k) + LT_VT
    under += UNDER
}
under += LT_VT_LT_L

// First Kind table
display (SIGNED ? 'Signed' : 'Unsigned') + ' Stirling Numbers of the First Kind'

display header
display under

loop n over START..N {
    var line = formatstring('%-3d' + LT_VT, n)
    loop k over START..n {
        line += formatstring(FORMAT, S1(n, k, SIGNED)) + LT_VT
    }
    loop k over n+1..N {
        line += BLANK
    }
    display line
}
display

// Second Kind table
// Results can be partially verified from here:
// https://en.wikipedia.org/wiki/Stirling_numbers_of_the_second_kind

display 'Stirling Numbers of the Second Kind'

display header
display under

loop n over START..N {
    var line = formatstring('%-3d' + LT_VT, n)
    loop k over START..n {
        line += formatstring(FORMAT, S2(n, k)) + LT_VT
    }
    loop k over n+1..N {
        line += BLANK
    }
    display line
}
display

}
