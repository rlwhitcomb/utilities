#
# Tests of IF, and CASE
#

# Test variables defined on the command line
verbose

:Clear
:Variables

define oddness={
   Case value%2 Of
    0: 'even',
    1: 'odd',
    Default: 'NOT POSSIBLE!'
}

value=27; oddness
value=30; oddness
value=-1; oddness

def oddness_if = {
   IF Abs(value%2) == 0
      'even'
   ELSE
      'odd'
}

value=23; oddness_if
value=14; oddness_if
value=pi; oddness_if

def multiples=
{
   case value of
      Default: { 'some other value' },
      7,14,21: { 'multiple of 7' },
      6,12,18: { 'multiple of 6' }
}

value=14; multiples
value=12; multiples
value=3; multiples

define match_arrays = {
   case value of {
      [ ]: {
         'empty array'
      },
      [ 1, 2 ]: {
         "one and two"
      },
      default: {
         'some other array'
      }
   }
}

value=[]; match_arrays
value=[1,2]; match_arrays
value=[3,4,5]; match_arrays

define strings = {
   case upper(value) of
      "ONE": 1,
      "TWO": 2,
      "THREE" : 3.14,
      default: "many"
}

value='one'; strings
value='Two'; strings
value='THREE'; strings
value="zero"; strings

define fieldType($typeid) = {
    case $typeid of {
	4: ' TEXT',
	7: 'LABEL',
	19,
	default,
	23: `$$typeid`
    }
}
fieldType(4);fieldType(7);fieldType(23);fieldType(19);fieldType(99)
'type: ' + fieldType(4)

def srt($a1, $a2, $f) = { $f($a1, $a2) > 0 ? $a1 : $a2 }

#
# Using functions for objects
#
w = { universal: true }
def u = { "universal" }
def v = { w }
v().`$u`
v().`$u` = 127
v()

# Test input arguments
$#
$*
$0;$4
$*[2]
$5

