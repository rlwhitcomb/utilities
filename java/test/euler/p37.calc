/*
 * Problem 37 from Project Euler (projecteuler.net)
 *
 * Truncatable Primes
 *
 * The number 3797 has an interesting property. Being prime itself, it is possible to continuously remove digits from left to right,
 * and remain prime at each stage: 3797, 797, 97, and 7. Similarly we can work from right to left: 3797, 379, 37, and 3.
 *
 * Find the sum of the only eleven primes that are both truncatable from left to right and right to left.
 *
 * NOTE: 2, 3, 5, and 7 are not considered to be truncatable primes.
 */
$quiet on {

const LIMIT = 11
var sum = 0

/*
 * Return a list of the prime numbers within the given range.
 *
 * @param m Starting value for the list (should be 2 or any odd number).
 * @param n Limit for the list of primes.
 * @return  Array of prime numbers within the input range.
 */
define primes(m, n) = {
   var list = []
   if 2 in m..n list += 2
   const s = max(m|1, 3)
   loop x over s..n, 2 {
      if isprime(x) list += x
   }
   list
}

var test_primes = primes(11, 799999)
var truncatables = []

loop p over test_primes {
   var tests = []
   const s = @@p
   var len = -1
   loop over length(s) - 1 {
      tests += s[:len--]
   }
   len = 1
   loop over length(s) - 1 {
      tests += s[len++:]
   }
   if isPrime(tests) truncatables += p
   if length(truncatables) >= LIMIT leave
}

} // end of quiet on

$resultsonly on {

   $echo `Sum of the ${LIMIT@w} truncatable primes is ${sumof(truncatables)}.`
   $echo `All the truncatable primes are $truncatables.`

} // end of results on

