Generating output file 'test/data/TestPP.java'
       from input file 'test/data/TestPP.javapp'...
  Line     Directive
--------- --------------------------------------
      29.+# define ABC	"ABC"
      30.+ # define DEF
      31.+#	define	GHI	ghi
      32.+	#	define	JKL	123
      33.+	#	define	JKL1	(JKL+1)
      34.+	#	define	JKL2	(JKL*2)
      35.+# define T	true
      36.+# define F	false
      37.+#define LAST_VERSION 4.5.1
      41.  # if	T
      42.+	private static String TRUE_WORKS = "true works!";
      43.  # else
      44.  	#error T doesn't work!
      45.  #endif
      46. 	# if !F
      47.+	private static String FALSE_ALSO_WORKS = "!false also works correctly.";
      48. 	# else
      49. 	#error !F doesn't work
      50. 	# endif
      52. #if !F && T
      53.+	// !false && true works
      54. #else
      56. #endif
      57. #if !(F || T)
      59. #else
      60.+	// Good!  !(false || true) works
      61. #endif
      62. #if F
      64. #elif F
      66. #elif T
      67.+	// Finally!  true is true
      68. #else
      70. #endif
      71.+#define	TEST	(T && !F)
      72. #if TEST
      73.+	// Compound test of (T && !F) worked!
      74.  #else
      76. #endif
      78. #ifdef DEF
      79.+	private static String DEF = "DEF is defined as '' (should be '')";
      80. #else
      81. 	#error DEF should be defined!
      82. #endif
      83. #if defined(DEF)
      84.+	private static String DEF2 = "DEF tested correctly by #defined";
      85. #else
      86. 	#error defined(DEF) didn't work right.
      87. #endif
      88. #ifndef XYZ
      89.+	private static String XYZ_UNDEF = "This is correct -- XYZ is not defined.";
      90. #else
      91. 	#error XYZ defined test failed!
      92. #endif
      94. #if LAST_VERSION > 4.5.0
      95.+	private static String VERSION = "4.5.1";
      96. #else
      97. 	#error version check didn't work right
      98. #endif
     101. #if !defined(ING_REL)
     102.+	private static String ING_REL_UNDEFINED = "Correct, we should have undefined ING_REL on the command line.";
     103. #else
     104. 	#error ING_REL should be undefined and is not!
     105. #endif
Error: Macro "pqr" not defined!
Error: Macro "xyzzy" not defined!
     110. # ifistr "abc" == ABC
     111.+	// This is correct -- "abc" should equal (case-insensitive) "ABC"
     112. # elseif ABC == "abc"
     114. # else
     116. #endif
     118. # ifistr ABC != "abc"
     120. # elseif ABC == "abc"
     122. # else
     123.+	// Correct!  Correctly tested different scenario with #ifistr
     124. #endif
     127. #if JKL + 2 == 125
     128.+	private static int JKL_PLUS = 123 + 2;	// simple arithmetic test works
     129. #else
     130. 	#error Numeric addition test failed!
     131. #endif
     134. #if ((JKL + 123) / JKL) % JKL + 2 == (255 % 128 % 4 +1)
     135.+	// Correct result using JKL=123
     136. #else
     137. 	#error Error evaluating '((JKL + 123) / JKL) % JKL + 2 == (255 % 128 % 4 +1)'
     138. #endif
     139. #if (255 % 128 % 4 +1) == ((JKL + 123) / JKL) % JKL + 2
     140.+	// Correct result using JKL=123 and switching the order of operations
     141. #else
     142. 	#error Error evaluating '(255 % 128 % 4 +1) == ((JKL + 123) / JKL) % JKL + 2'
     143. #endif
     145. #ifnum JKL+1 == JKL1
     146.+	// Arithmetic test of JKL+1==JKL1 (${JKL}+1==(JKL+1)) correct.
     147. #else
     149. #endif
     151. #ifnum JKL*2 == JKL2
     152.+	// Arithmetic test of JKL*2==JKL2 (123*2==(JKL*2)) correct.
     153. #else
     155. #endif
