>All variables and functions cleared.
>Separator display set to “false”.
>excel_date(d'2021/10/8') -> 44477
>excel_date_1904(D'12/7/1941') -> 13855
>rad_to_deg(pi / 4) -> 45
>deg_to_rad(135) -> 2.356194490192344928846982537459627
>rad_to_grad(pi) -> 200
>grad_to_rad(50) -> 0.7853981633974483096156608458198758
>deg_to_grad(135) -> 150
>grad_to_deg(400) -> 360
>dow_name(D'10/13/1957') -> "Sunday"
>moy_name(D'9/11/2001') -> "September"
>long_date(D'11/11/1918') -> "Monday, November 11, 1918"
>flat_map([[[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]]]) -> [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ]
>sort flat_map([[3, 9], [4, 7], [1, 2], [10, 8]]) -> [ 1, 2, 3, 4, 7, 8, 9, 10 ]
>is_perfect(28) -> true
>is_perfect(99) -> false
>primes(1, 50) -> [ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47 ]
>primes(1, 128) -> [ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127 ]
>quad(3, -4, -9) -> [ 2.52258812094334064070649043297285, -1.189254787610007307373157099639517 ]
>quad(1, 0, -25) -> [ 5, -5 ]
>quad(1, -1, -1)[0] -> 1.618033988749894848204586834365638
>quad(1, 0, 4) -> [ ( 0, 2 ), ( 0, -2 ) ]
>quad_exp(1, 0, 4,(0, 2)) -> ( 0, 0 )
>quad_exp(1, 0, 4,(0, -2)) -> ( 0, 0 )
>zeta_2n(2) -> 1.644934066848226436472415166646026
>win_pct(25, 75) -> "25.00%"
>win_pct(662, 174, 2) -> "79.00%"
>mean_stddev([1, 2, 3, 4, 5, 6, 7, 8]) -> { mean: 4.5, stddev: 2.291 }
>help_mort -> 
>Usage: PMT (P = present value, R = yearly interest rate (%), N = number of years)
>   or PMT2 (P = present value, r = monthly interest (%), n = number of months)
>   Or use monthly(P,R,N) or monthly_whole(P,R,N) to get the results in different forms.
>
>monthly(244000, 3.25, 30) -> Full monthly payment is $1,061.90
>PMT2(350000, 0.3, 180) -> 2519.31
>s1 = eval stack -> { _values: [ ] }
>isempty(s1) -> true
>peek(s1) -> <null>
>push(s1, 'abc') -> [ "abc" ]
>isempty(s1) -> false
>push(s1, 'def') -> [ "abc", "def" ]
>peek(s1) -> "def"
>s1 -> { _values: [ "abc", "def" ] }
>pop(s1) -> "def"
>peek(s1) -> "abc"
>pop(s1) -> "abc"
>isempty(s1) -> true
>peek(s1) -> <null>
>pop(s1) -> <null>
>isempty(s1) -> true
>FtoC(32) -> 0
>FtoC(212) -> 100
>CtoF(0) -> 32
>CtoF(100) -> 212
>CtoF(23) -> 73.4
>FtoC(98.6) -> 37
>CtoF(40) -> 104
>FtoC(-40) -> -40
>CtoF(-40) -> -40
>m_to_ft(1) -> 3.28083989501312335958005249343832
>ft_to_m(3) -> 0.9144
>km_to_mile(1) -> 0.6213711922373339696174341843633182
>mile_to_km(0.5) -> 0.804672
>mm_to_in(25) -> 0.9842519685039370078740157480314961
>in_to_mm(2) -> 50.8
>cm_to_in(1) -> 0.3937007874015748031496062992125984
>in_to_cm(12) -> 30.48
>gm_to_oz(500) -> 17.63698097479020645783790410760216
>oz_to_gm(1) -> 28.349523125
>kg_to_lb(1) -> 2.20462262184877580722973801345027
>lb_to_kg(2) -> 0.90718474
>pt_to_ml(1) -> 473.176473
>ml_to_pt(500) -> 1.05668820943259366151959968643665
>acre_to_sqft(1 / 3) -> 14520
>sqft_to_acre(12000) -> 0.2754820936639118457300275482093664
>to_excel_col(1) -> "A"
>to_excel_col(2) -> "B"
>to_excel_col(25) -> "Y"
>to_excel_col(26) -> "Z"
>to_excel_col(27) -> "AA"
>to_excel_col(32) -> "AF"
>to_excel_col(52) -> "AZ"
>to_excel_col(53) -> "BA"
>to_excel_col(256) -> "IV"
>to_excel_col(702) -> "ZZ"
>to_excel_col(16384) -> "XFD"
>from_excel_col('A') -> 1
>from_excel_col('Z') -> 26
>from_excel_col('AA') -> 27
>from_excel_col('AF') -> 32
>from_excel_col('ZZ') -> 702
>from_excel_col('XFD') -> 16384
>Checking all columns from 1 - 16384 ...
>Number of tests = 16384, mistakes = 0
>hash('test/data/Declaration.txt', , true) -> "D424650E3A0F123F4D46D14AF0E2C309184C823021F578B02689802B06B0F674"
>hashstring('Four score and seven years ago') -> "213742bd59f1d8fe848b6ea94647dd465310b8d816234d5a952dc645fa320707"
>Defining constant “TS” = "this is a test"
>capitalize(TS, 0) -> "THIS IS A TEST"
>capitalize(TS, 1) -> "This is a test"
>capitalize(TS, WORDCAP) -> "This Is A Test"
>dt1 = d'2021-8-5' -> 18844
>dateformat(dt1, 'MMM d, yyyy') -> "August 5, 2021"
>dateformat(dt1, 'mm/dd/yyyy') -> "08/05/2021"
>dateformat(dt1, 'd M yyyy') -> "5 Aug 2021"
>dateformat(dt1, 'yyyy-dd-mm') -> "2021-05-08"
>dateformat(dt1) -> "08/05/2021"
>dateformat(dt1, 'm/d/yy') -> "8/5/21"
>dateformat(dt1, 'mm/dd/yy') -> "08/05/21"
>Defining function “dx2” = dt1 - 1
>dateformat(dx2) -> "08/04/2021"
>dateformat(dt1) -> "08/05/2021"
>cp = 0x1f603 -> 128515
>surr_pair_to_cp(0xd83d, 0xde03) @c -> "😃"
>cp_to_high_surr(cp) @x -> 0xd83d
>cp_to_low_surr(cp) @x -> 0xde03
>epoch_secs_to_datetime(datetime_to_epoch_secs(D'12-31-1969', H'11:30:29pm')) -> "1969-12-31 23:30:29"
>epoch_secs_to_datetime(datetime_to_epoch_secs(d'1941-12-07', h'07:48')) -> "1941-12-07 7:48"
>collatz(13) -> [ 13, 40, 20, 10, 5, 16, 8, 4, 2, 1, 1 ]
>collatz(837799) -> [ 837799, 2513398, 1256699, 3770098, 1885049, 5655148, 2827574, 1413787, 4241362, 2120681, 6362044, 3181022, 1590511, 4771534, 2385767, 7157302, 3578651, 10735954, 5367977, 16103932, 8051966, 4025983, 12077950, 6038975, 18116926, 9058463, 27175390, 13587695, 40763086, 20381543, 61144630, 30572315, 91716946, 45858473, 137575420, 68787710, 34393855, 103181566, 51590783, 154772350, 77386175, 232158526, 116079263, 348237790, 174118895, 522356686, 261178343, 783535030, 391767515, 1175302546, 587651273, 1762953820, 881476910, 440738455, 1322215366, 661107683, 1983323050, 991661525, 2974984576, 1487492288, 743746144, 371873072, 185936536, 92968268, 46484134, 23242067, 69726202, 34863101, 104589304, 52294652, 26147326, 13073663, 39220990, 19610495, 58831486, 29415743, 88247230, 44123615, 132370846, 66185423, 198556270, 99278135, 297834406, 148917203, 446751610, 223375805, 670127416, 335063708, 167531854, 83765927, 251297782, 125648891, 376946674, 188473337, 565420012, 282710006, 141355003, 424065010, 212032505, 636097516, 318048758, 159024379, 477073138, 238536569, 715609708, 357804854, 178902427, 536707282, 268353641, 805060924, 402530462, 201265231, 603795694, 301897847, 905693542, 452846771, 1358540314, 679270157, 2037810472, 1018905236, 509452618, 254726309, 764178928, 382089464, 191044732, 95522366, 47761183, 143283550, 71641775, 214925326, 107462663, 322387990, 161193995, 483581986, 241790993, 725372980, 362686490, 181343245, 544029736, 272014868, 136007434, 68003717, 204011152, 102005576, 51002788, 25501394, 12750697, 38252092, 19126046, 9563023, 28689070, 14344535, 43033606, 21516803, 64550410, 32275205, 96825616, 48412808, 24206404, 12103202, 6051601, 18154804, 9077402, 4538701, 13616104, 6808052, 3404026, 1702013, 5106040, 2553020, 1276510, 638255, 1914766, 957383, 2872150, 1436075, 4308226, 2154113, 6462340, 3231170, 1615585, 4846756, 2423378, 1211689, 3635068, 1817534, 908767, 2726302, 1363151, 4089454, 2044727, 6134182, 3067091, 9201274, 4600637, 13801912, 6900956, 3450478, 1725239, 5175718, 2587859, 7763578, 3881789, 11645368, 5822684, 2911342, 1455671, 4367014, 2183507, 6550522, 3275261, 9825784, 4912892, 2456446, 1228223, 3684670, 1842335, 5527006, 2763503, 8290510, 4145255, 12435766, 6217883, 18653650, 9326825, 27980476, 13990238, 6995119, 20985358, 10492679, 31478038, 15739019, 47217058, 23608529, 70825588, 35412794, 17706397, 53119192, 26559596, 13279798, 6639899, 19919698, 9959849, 29879548, 14939774, 7469887, 22409662, 11204831, 33614494, 16807247, 50421742, 25210871, 75632614, 37816307, 113448922, 56724461, 170173384, 85086692, 42543346, 21271673, 63815020, 31907510, 15953755, 47861266, 23930633, 71791900, 35895950, 17947975, 53843926, 26921963, 80765890, 40382945, 121148836, 60574418, 30287209, 90861628, 45430814, 22715407, 68146222, 34073111, 102219334, 51109667, 153329002, 76664501, 229993504, 114996752, 57498376, 28749188, 14374594, 7187297, 21561892, 10780946, 5390473, 16171420, 8085710, 4042855, 12128566, 6064283, 18192850, 9096425, 27289276, 13644638, 6822319, 20466958, 10233479, 30700438, 15350219, 46050658, 23025329, 69075988, 34537994, 17268997, 51806992, 25903496, 12951748, 6475874, 3237937, 9713812, 4856906, 2428453, 7285360, 3642680, 1821340, 910670, 455335, 1366006, 683003, 2049010, 1024505, 3073516, 1536758, 768379, 2305138, 1152569, 3457708, 1728854, 864427, 2593282, 1296641, 3889924, 1944962, 972481, 2917444, 1458722, 729361, 2188084, 1094042, 547021, 1641064, 820532, 410266, 205133, 615400, 307700, 153850, 76925, 230776, 115388, 57694, 28847, 86542, 43271, 129814, 64907, 194722, 97361, 292084, 146042, 73021, 219064, 109532, 54766, 27383, 82150, 41075, 123226, 61613, 184840, 92420, 46210, 23105, 69316, 34658, 17329, 51988, 25994, 12997, 38992, 19496, 9748, 4874, 2437, 7312, 3656, 1828, 914, 457, 1372, 686, 343, 1030, 515, 1546, 773, 2320, 1160, 580, 290, 145, 436, 218, 109, 328, 164, 82, 41, 124, 62, 31, 94, 47, 142, 71, 214, 107, 322, 161, 484, 242, 121, 364, 182, 91, 274, 137, 412, 206, 103, 310, 155, 466, 233, 700, 350, 175, 526, 263, 790, 395, 1186, 593, 1780, 890, 445, 1336, 668, 334, 167, 502, 251, 754, 377, 1132, 566, 283, 850, 425, 1276, 638, 319, 958, 479, 1438, 719, 2158, 1079, 3238, 1619, 4858, 2429, 7288, 3644, 1822, 911, 2734, 1367, 4102, 2051, 6154, 3077, 9232, 4616, 2308, 1154, 577, 1732, 866, 433, 1300, 650, 325, 976, 488, 244, 122, 61, 184, 92, 46, 23, 70, 35, 106, 53, 160, 80, 40, 20, 10, 5, 16, 8, 4, 2, 1, 1 ]
>tri(285) -> 40755
>pent(165) -> 40755
>hex(143) -> 40755
>Precision is now “300” digits.
>Tn(0) = 1
>Tn(1) = -2
>Tn(2) = 16
>Tn(3) = -272
>Tn(4) = 7936
>Tn(5) = -353792
>Tn(6) = 22368256
>Tn(7) = -1903757312
>Tn(8) = 209865342976
>Tn(9) = -29088885112832
>Tn(10) = 4951498053124096
>Tn(11) = -1015423886506852352
>Tn(12) = 246921480190207983616
>Tn(13) = -70251601603943959887872
>Tn(14) = 23119184187809597841473536
>Tn(15) = -8713962757125169296170811392
>Tn(16) = 3729407703720529571097509625856
>Tn(17) = -1798651693450888780071750349094912
>Tn(18) = 970982810785059112379399707952152576
>Tn(19) = -583203324917310043943191641625494290432
>Tn(20) = 387635983772083031828014624002175135645696
>Precision is now “34” digits.
>colored = `$RED_BOLD_BRIGHT red $RESET` -> "[1;91m red ”"
>colored @Q -> "<Rd*!> red <.>"
>Separator display set to “false”.
>All variables and functions cleared.
