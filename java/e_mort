#
# M = P[r(1+r)^n/((1+r)^n)-1)]
#
#  M = the total monthly mortgage payment
#  P = the principal loan amount
#  r = your monthly interest rate. Lenders provide you an annual rate
#      so you’ll need to divide that figure by 12 (the number of month
#      in a year) to get the monthly rate. If your interest rate is 5%,
#      your monthly rate would be 0.004167 (0.05/12=0.004167).
#  n = number of payments over the loan’s lifetime. Multiply the number
#      of years in your loan term by 12 (the number of months in a year)
#      to get the number of total payments for your loan. For example,
#      a 30-year fixed mortgage would have 360 payments (30x12=360).
#

#
# grammar is PMT obj
# where "obj" has P, r or R, n or N
# where r = monthly rate, R = yearly rate
#   and n = months, N = years
#

# Note: this particular example comes from
# https://www.bankrate.com/calculators/mortgages/mortgage-calculator.aspx

# The context for the payment calculation is:
#   P = full principal amount to be financed
#   R = yearly interest rate (%)
#   N = number of years
# Then the calculated values are:
#   r = monthly interest as a decimal value (% / 100 / 12)
#   n = number of months (years * 12)

ctx = { P: (3004000*0.80), R: 2.91, N: 30 }

ctx.r = (ctx.R / 100) / 12
ctx.n = ctx.N * 12
ctx

# Calculate the intermediate values (which are reused)
r_n = (1 + ctx.r) ** ctx.n
r_r_n = ctx.r * r_n
r_n_1 = r_n - 1

# Now the final monthly payment value
M = ctx.P * (r_r_n / r_n_1)

# Note: the 2nd param is the number of fractional digits (after the decimal point)
# regardless of the number of whole digits in the result; so "0" will round
# to a whole dollar, "2" rounds to pennies.
:results on
`Full monthly payment is $$${round (M, 2)}`
`Monthly payment in whole dollars is $$${round (M, 0)}`
:results pop
