$echo "Starting expression tests (suite 1)."
$echo

$decimal(50)
52+27
3.4 + 5
34 + 5,x
PI
sin(pi/3)
4 & 7
true && false
(1+2) * (3+4)
$Double
atan2(4, 5)
14/7;12/4;13/9
a = 1; b = 2; a+b;
a<=>b;a<=b;b<a;1>2;2>=1;
$DEFAULT
1.2+3.4
1/7
$decimal 18
e
a
$clear
a
a = b = c = 27; a+b; b+c
e
name = 'Roger'
"This isn't a number"
'This ' + "isn't" + " a number"
'This isn\'t either, ' + name
s = sqrt(17);
t = s * s;
$decimal 30
t = 17**0.5
t * t

fib 27
fib 0
fib 1
fib 2
fib 3
fib 5
fib -1
fib -2
fib -6
fib 200

I = 1; ++I; I;
J = 2; J++; J;
$double
pi / 2
asin ( sin ( pi / 2 ) )
pi/4
acos(cos(pi/4))
pi/3
atan(tan(pi/3))
b = -27; c = 0; d = 153;
signum b; signum c; signum d;
h = 23
i = ln(h)
e**i
m = 10000
n = log(m)
10**n

$degrees
sin(45)
cos(60)
asin(sin(50))
acos(cos(30))
atan(tan(15))

$rad
$dec 60
π
a = sin(π/4)
b = a * 2
c = b*b
round c, 14
round(a, 10)

sin(2700)
sin -(4*pi)

min 1, -1, 27, -300, 18.5, -300.5
max 'abc', 'ghi', "ABC", "012"

min(-27)
max(2.4)
min(-3,-5)
max(1,3,5,2,8,9,11,4,6)

gcd(25, 10)
gcd(27*2, 3*9*18)

127 | 128
15 & 7
31 ^ 10

'abc' != "ABC" && 0 != 1

0xFFFF ^ 0xAAAA,x
012
10,o
0b1010101010,x
0x2aa,b
~ 0x7FFF,x
~ 0x7FFF,o
~ 0x7FFF,b
255,o
123,b
'def',o
'abc',b

max('123', 456, 789)
min(123, '-1', '14')

join('This', 'is', 'a', 'test', ' ');
join('Hello', "World!", ', ');
join("Hello ", "handsome.");
join "RUDE!"

'[' + join (1, 2, 3, 4, 5, ', ') + ']'

1 === '1'
1 == '1'

! true
a
! (a == null)


$decimal 200; 1/7
$decimal 30; 1/9
$decimal 50; pi
$decimal 10000; e

$binary
1024**2,k
$ten
1000**4,k
$mixed
1024**3,k

100MB
2EB
2EiB
900KB,k
300PB
450PiB

$echo

a = [1, 2, 3]
a[0] = 4
a[1] = 5
a
a[3] = 10
a

b = null
b[2] = 'abc'
b
b[0] = 'ABC'
b

c = null
c.d = true
c.f = 1.2
c.g = "Begin"
c."key" = 'end'
c

d = [ 1, { start:1, end: 2 }, { px:0, py:0}, "Area" ]
d

f = { coords: [1, 1, 4, 5], name: "box" }
f

1 == 2 ? 'impossible' : 'correct'
2! < 2**2 ? 'true' : 'not likely'
x = 7; y = 8
_min = min_plus_1 = x < y ? x + 1 : y + 1
_min

y = x = 7 + 1
y;x

$clear m
m[0] = m[1] = m[2] = 3;
m

$clear a
a = 128
` a is $a, b isn't $a`
`a + 1 = ${a + 1}`
`5! = ${5!} !!`
`g$$`
`a = ${a,x}`
`a = ${a,%}`
`a = ${a,k}`

$echo
$echo "End of expression tests (suite 1)."

